{"version":3,"file":"sijssies.js","sources":["../node_modules/twgl.js/dist/4.x/twgl-full.js","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../src/KdTree.js","../node_modules/gl-matrix/cjs/common.js","../node_modules/gl-matrix/cjs/mat4.js","../src/Axes.js","../node_modules/gl-matrix/esm/mat3.js","../node_modules/gl-matrix/esm/vec4.js","../node_modules/gl-matrix/esm/quat.js","../src/Bird.js","../src/Sijs.js","../src/Predator.js","../src/shaders.js","../src/calcDelta.js","../src/sijsVerts.js","../src/Triggers.js","../src/index.js","../src/Controldesk.js","../src/Newsdesk.js"],"sourcesContent":["/*!\n * @license twgl.js 4.9.2 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\n * Available via the MIT license.\n * see: http://github.com/greggman/twgl.js for details\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/twgl-full.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/attributes.js\":\n/*!***************************!*\\\n  !*** ./src/attributes.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttribsFromArrays = createAttribsFromArrays;\nexports.createBuffersFromArrays = createBuffersFromArrays;\nexports.createBufferFromArray = createBufferFromArray;\nexports.createBufferFromTypedArray = createBufferFromTypedArray;\nexports.createBufferInfoFromArrays = createBufferInfoFromArrays;\nexports.setAttribInfoBufferFromArray = setAttribInfoBufferFromArray;\nexports.setAttributePrefix = setAttributePrefix;\nexports.setAttributeDefaults_ = setDefaults;\nexports.getNumComponents_ = getNumComponents;\nexports.getArray_ = getArray;\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  attribPrefix: \"\"\n};\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n * In otherwords I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\n\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n}\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n\n  type = type || gl.ARRAY_BUFFER;\n  var buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nvar texcoordRE = /coord|texture/i;\nvar colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  var numComponents;\n\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3; // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" + numComponents + \" but \" + length + \" values is not evenly divisible by \" + numComponents + \". You should specify it.\";\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array\n    };\n  }\n\n  var Type = array.type;\n\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n\n  return new Type(array.data);\n}\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of compoments of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} [type] type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createAttribsFromArrays(gl, arrays) {\n  var attribs = {};\n  Object.keys(arrays).forEach(function (arrayName) {\n    if (!isIndices(arrayName)) {\n      var array = arrays[arrayName];\n      var attribName = array.attrib || array.name || array.attribName || defaults.attribPrefix + arrayName;\n\n      if (array.value) {\n        if (!Array.isArray(array.value) && !typedArrays.isArrayBuffer(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n\n        attribs[attribName] = {\n          value: array.value\n        };\n      } else {\n        var buffer;\n        var type;\n        var normalization;\n        var numComponents;\n\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          buffer = array.buffer;\n          numComponents = array.numComponents || array.size;\n          type = array.type;\n          normalization = array.normalize;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          var numValues = array.data || array;\n          var arrayType = array.type || Float32Array;\n          var numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n          type = typedArrays.getGLTypeForTypedArrayType(arrayType);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n          numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n          buffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n          gl.bufferData(gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW);\n        } else {\n          var typedArray = makeTypedArray(array, arrayName);\n          buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n          type = typedArrays.getGLTypeForTypedArray(typedArray);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n          numComponents = getNumComponents(array, arrayName);\n        }\n\n        attribs[attribName] = {\n          buffer: buffer,\n          numComponents: numComponents,\n          type: type,\n          normalize: normalization,\n          stride: array.stride || 0,\n          offset: array.offset || 0,\n          divisor: array.divisor === undefined ? undefined : array.divisor,\n          drawType: array.drawType\n        };\n      }\n    }\n  });\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return attribs;\n}\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically upate the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably ineffient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\n\n\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n\n  if (offset !== undefined) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === gl.BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.INT) return 4; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_INT) return 4; // eslint-disable-line\n\n  if (type === gl.FLOAT) return 4; // eslint-disable-line\n\n  return 0;\n} // Tries to get the number of elements from a set of arrays.\n\n\nvar positionKeys = ['position', 'positions', 'a_position'];\n\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in arrays) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n\n  var array = arrays[key];\n  var length = getArray(array).length;\n  var numComponents = getNumComponents(array, key);\n  var numElements = length / numComponents;\n\n  if (length % numComponents > 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in attribs) {\n      break;\n    }\n\n    key = defaults.attribPrefix + key;\n\n    if (key in attribs) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n\n  var attrib = attribs[key];\n  gl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n  var numBytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  var bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  var totalElements = numBytes / bytesPerValue;\n  var numComponents = attrib.numComponents || attrib.size; // TODO: check stride\n\n  var numElements = totalElements / numComponents;\n\n  if (numElements % 1 !== 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs approriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also by TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or augmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specfied overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  var newAttribs = createAttribsFromArrays(gl, arrays);\n  var bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  var indices = arrays.indices;\n\n  if (indices) {\n    var newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, gl.ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that constains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be dervied other wise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromArray(gl, array, arrayName) {\n  var type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n  var typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBuffersFromArrays(gl, arrays) {\n  var buffers = {};\n  Object.keys(arrays).forEach(function (key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  }); // Ugh!\n\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\n/***/ }),\n\n/***/ \"./src/draw.js\":\n/*!*********************!*\\\n  !*** ./src/draw.js ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.drawBufferInfo = drawBufferInfo;\nexports.drawObjectList = drawObjectList;\n\nvar programs = _interopRequireWildcard(__webpack_require__(/*! ./programs.js */ \"./src/programs.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Drawing related functions\n *\n * For backward compatibily they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? gl.TRIANGLES : type;\n  var indices = bufferInfo.indices;\n  var elementType = bufferInfo.elementType;\n  var numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In otherwords `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElemnts`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\n\n\nfunction drawObjectList(gl, objectsToDraw) {\n  var lastUsedProgramInfo = null;\n  var lastUsedBufferInfo = null;\n  objectsToDraw.forEach(function (object) {\n    if (object.active === false) {\n      return;\n    }\n\n    var programInfo = object.programInfo;\n    var bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    var bindBuffers = false;\n    var type = object.type === undefined ? gl.TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program); // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n\n      bindBuffers = true;\n    } // Setup all the needed attributes.\n\n\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    } // Set the uniforms.\n\n\n    programs.setUniforms(programInfo, object.uniforms); // Draw\n\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\n/***/ }),\n\n/***/ \"./src/framebuffers.js\":\n/*!*****************************!*\\\n  !*** ./src/framebuffers.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.bindFramebufferInfo = bindFramebufferInfo;\nexports.createFramebufferInfo = createFramebufferInfo;\nexports.resizeFramebufferInfo = resizeFramebufferInfo;\n\nvar textures = _interopRequireWildcard(__webpack_require__(/*! ./textures.js */ \"./src/textures.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibily they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar UNSIGNED_BYTE = 0x1401;\n/* PixelFormat */\n\nvar DEPTH_COMPONENT = 0x1902;\nvar RGBA = 0x1908;\n/* Framebuffer Object. */\n\nvar RGBA4 = 0x8056;\nvar RGB5_A1 = 0x8057;\nvar RGB565 = 0x8D62;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar STENCIL_INDEX = 0x1901;\nvar STENCIL_INDEX8 = 0x8D48;\nvar DEPTH_STENCIL = 0x84F9;\nvar COLOR_ATTACHMENT0 = 0x8CE0;\nvar DEPTH_ATTACHMENT = 0x8D00;\nvar STENCIL_ATTACHMENT = 0x8D20;\nvar DEPTH_STENCIL_ATTACHMENT = 0x821A;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar CLAMP_TO_EDGE = 0x812F;\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\nvar LINEAR = 0x2601;\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attach] The attachment point. Defaults\n *   to `gl.COLOR_ATTACTMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachemnts across framebuffers.\n * @memberOf module:twgl\n */\n\nvar defaultAttachments = [{\n  format: RGBA,\n  type: UNSIGNED_BYTE,\n  min: LINEAR,\n  wrap: CLAMP_TO_EDGE\n}, {\n  format: DEPTH_STENCIL\n}];\nvar attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format) {\n  return attachmentsByFormat[format];\n}\n\nvar renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  var target = gl.FRAMEBUFFER;\n  var fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  var colorAttachmentCount = 0;\n  var framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height\n  };\n  attachments.forEach(function (attachmentOptions) {\n    var attachment = attachmentOptions.attachment;\n    var format = attachmentOptions.format;\n    var attachmentPoint = getAttachmentPointForFormat(format);\n\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n      } else {\n        var textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n        }\n\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      gl.framebufferTexture2D(target, attachmentPoint, attachmentOptions.texTarget || gl.TEXTURE_2D, attachment, attachmentOptions.level || 0);\n    } else {\n      throw \"unknown attachment type\";\n    }\n\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function (attachmentOptions, ndx) {\n    var attachment = framebufferInfo.attachments[ndx];\n    var format = attachmentOptions.format;\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n      gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw \"unknown attachment type\";\n    }\n  });\n}\n/**\n * Binds a framebuffer\n *\n * This function pretty much soley exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If not passed will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || gl.FRAMEBUFFER;\n\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\n/***/ }),\n\n/***/ \"./src/helper.js\":\n/*!***********************!*\\\n  !*** ./src/helper.js ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.copyExistingProperties = copyExistingProperties;\nexports.copyNamedProperties = copyNamedProperties;\nexports.isBuffer = isBuffer;\nexports.isRenderbuffer = isRenderbuffer;\nexports.isShader = isShader;\nexports.isTexture = isTexture;\nexports.isSampler = isSampler;\nexports.warn = exports.error = void 0;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n * @private\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function (name) {\n    var value = src[name];\n\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n * @private\n */\n\n\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function (key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\n      dst[key] = src[key];\n    }\n  });\n}\n\nvar error = typeof console !== 'undefined' && console.error && typeof console.error === \"function\" ? console.error.bind(console) : function () {};\nexports.error = error;\nvar warn = typeof console !== 'undefined' && console.warn && typeof console.warn === \"function\" ? console.warn.bind(console) : function () {};\nexports.warn = warn;\nvar repBuffer;\n\nfunction isBuffer(gl, t) {\n  if (!repBuffer) {\n    repBuffer = gl.createBuffer();\n  }\n\n  return t instanceof repBuffer.constructor;\n}\n\nvar repRenderbuffer;\n\nfunction isRenderbuffer(gl, t) {\n  if (!repRenderbuffer) {\n    repRenderbuffer = gl.createRenderbuffer();\n  }\n\n  return t instanceof repRenderbuffer.constructor;\n}\n\nvar repShader;\n\nfunction isShader(gl, t) {\n  if (!repShader) {\n    repShader = gl.createShader(gl.VERTEX_SHADER);\n  }\n\n  return t instanceof repShader.constructor;\n}\n\nvar repTexture;\n\nfunction isTexture(gl, t) {\n  if (!repTexture) {\n    repTexture = gl.createTexture();\n  }\n\n  return t instanceof repTexture.constructor;\n}\n\nvar repSampler;\n\nfunction isSampler(gl, t) {\n  if (!repSampler) {\n    if (gl.createSampler) {\n      repSampler = gl.createSampler();\n    } else {\n      return false; // it can't be a sampler if this is not WebGL2\n    }\n  }\n\n  return t instanceof repSampler.constructor;\n}\n\n/***/ }),\n\n/***/ \"./src/m4.js\":\n/*!*******************!*\\\n  !*** ./src/m4.js ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.axisRotate = axisRotate;\nexports.axisRotation = axisRotation;\nexports.copy = copy;\nexports.frustum = frustum;\nexports.getAxis = getAxis;\nexports.getTranslation = getTranslation;\nexports.identity = identity;\nexports.inverse = inverse;\nexports.lookAt = lookAt;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.ortho = ortho;\nexports.perspective = perspective;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotationX = rotationX;\nexports.rotationY = rotationY;\nexports.rotationZ = rotationZ;\nexports.scale = scale;\nexports.scaling = scaling;\nexports.setAxis = setAxis;\nexports.setDefaultType = setDefaultType;\nexports.setTranslation = setTranslation;\nexports.transformDirection = transformDirection;\nexports.transformNormal = transformNormal;\nexports.transformPoint = transformPoint;\nexports.translate = translate;\nexports.translation = translation;\nexports.transpose = transpose;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(/*! ./v3.js */ \"./src/v3.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nvar MatType = Float32Array;\nvar tempV3a = v3.create();\nvar tempV3b = v3.create();\nvar tempV3c = v3.create();\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n * @memberOf module:twgl/m4\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = -m[0];\n  dst[1] = -m[1];\n  dst[2] = -m[2];\n  dst[3] = -m[3];\n  dst[4] = -m[4];\n  dst[5] = -m[5];\n  dst[6] = -m[6];\n  dst[7] = -m[7];\n  dst[8] = -m[8];\n  dst[9] = -m[9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n  return dst;\n}\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = m[0];\n  dst[1] = m[1];\n  dst[2] = m[2];\n  dst[3] = m[3];\n  dst[4] = m[4];\n  dst[5] = m[5];\n  dst[6] = m[6];\n  dst[7] = m[7];\n  dst[8] = m[8];\n  dst[9] = m[9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n  return dst;\n}\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transpose(m, dst) {\n  dst = dst || new MatType(16);\n\n  if (dst === m) {\n    var t;\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  dst[0] = m00;\n  dst[1] = m10;\n  dst[2] = m20;\n  dst[3] = m30;\n  dst[4] = m01;\n  dst[5] = m11;\n  dst[6] = m21;\n  dst[7] = m31;\n  dst[8] = m02;\n  dst[9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n  return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n  var tmp_12 = m20 * m31;\n  var tmp_13 = m30 * m21;\n  var tmp_14 = m10 * m31;\n  var tmp_15 = m30 * m11;\n  var tmp_16 = m10 * m21;\n  var tmp_17 = m20 * m11;\n  var tmp_18 = m00 * m31;\n  var tmp_19 = m30 * m01;\n  var tmp_20 = m00 * m21;\n  var tmp_21 = m20 * m01;\n  var tmp_22 = m00 * m11;\n  var tmp_23 = m10 * m01;\n  var t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 = tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 = tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n  var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n  dst[0] = d * t0;\n  dst[1] = d * t1;\n  dst[2] = d * t2;\n  dst[3] = d * t3;\n  dst[4] = d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[5] = d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[6] = d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[7] = d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[8] = d * (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[9] = d * (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n  return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4 + 0];\n  var a11 = a[4 + 1];\n  var a12 = a[4 + 2];\n  var a13 = a[4 + 3];\n  var a20 = a[8 + 0];\n  var a21 = a[8 + 1];\n  var a22 = a[8 + 2];\n  var a23 = a[8 + 3];\n  var a30 = a[12 + 0];\n  var a31 = a[12 + 1];\n  var a32 = a[12 + 2];\n  var a33 = a[12 + 3];\n  var b00 = b[0];\n  var b01 = b[1];\n  var b02 = b[2];\n  var b03 = b[3];\n  var b10 = b[4 + 0];\n  var b11 = b[4 + 1];\n  var b12 = b[4 + 2];\n  var b13 = b[4 + 3];\n  var b20 = b[8 + 0];\n  var b21 = b[8 + 1];\n  var b22 = b[8 + 2];\n  var b23 = b[8 + 3];\n  var b30 = b[12 + 0];\n  var b31 = b[12 + 1];\n  var b32 = b[12 + 2];\n  var b33 = b[12 + 3];\n  dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n  return dst;\n}\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none, a new one is created.\n * @return {module:twgl/m4.Mat4} a once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n\n  if (a !== dst) {\n    dst[0] = a[0];\n    dst[1] = a[1];\n    dst[2] = a[2];\n    dst[3] = a[3];\n    dst[4] = a[4];\n    dst[5] = a[5];\n    dst[6] = a[6];\n    dst[7] = a[7];\n    dst[8] = a[8];\n    dst[9] = a[9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  var off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/v3.Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none, a new one is created.\n * @return {module:twgl/m4.Mat4} dst\n * @memberOf module:twgl/m4\n */\n\n\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n\n  var off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  var rangeInv = 1.0 / (zNear - zFar);\n  dst[0] = f / aspect;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = f;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 othogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 2 / (right - left);\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 / (top - bottom);\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  var dx = right - left;\n  var dy = top - bottom;\n  var dz = near - far;\n  dst[0] = 2 * near / dx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 * near / dy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = (left + right) / dx;\n  dst[9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n  var xAxis = tempV3a;\n  var yAxis = tempV3b;\n  var zAxis = tempV3c;\n  v3.normalize(v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n  dst[0] = xAxis[0];\n  dst[1] = xAxis[1];\n  dst[2] = xAxis[2];\n  dst[3] = 0;\n  dst[4] = yAxis[0];\n  dst[5] = yAxis[1];\n  dst[6] = yAxis[2];\n  dst[7] = 0;\n  dst[8] = zAxis[0];\n  dst[9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by translation by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[0] = m00;\n    dst[1] = m01;\n    dst[2] = m02;\n    dst[3] = m03;\n    dst[4] = m10;\n    dst[5] = m11;\n    dst[6] = m12;\n    dst[7] = m13;\n    dst[8] = m20;\n    dst[9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = c;\n  dst[6] = s;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[4] = c * m10 + s * m20;\n  dst[5] = c * m11 + s * m21;\n  dst[6] = c * m12 + s * m22;\n  dst[7] = c * m13 + s * m23;\n  dst[8] = c * m20 - s * m10;\n  dst[9] = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = 0;\n  dst[2] = -s;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = s;\n  dst[9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 - s * m20;\n  dst[1] = c * m01 - s * m21;\n  dst[2] = c * m02 - s * m22;\n  dst[3] = c * m03 - s * m23;\n  dst[8] = c * m20 + s * m00;\n  dst[9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = s;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = -s;\n  dst[5] = c;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 + s * m10;\n  dst[1] = c * m01 + s * m11;\n  dst[2] = c * m02 + s * m12;\n  dst[3] = c * m03 + s * m13;\n  dst[4] = c * m10 - s * m00;\n  dst[5] = c * m11 - s * m01;\n  dst[6] = c * m12 - s * m02;\n  dst[7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  dst[0] = xx + (1 - xx) * c;\n  dst[1] = x * y * oneMinusCosine + z * s;\n  dst[2] = x * z * oneMinusCosine - y * s;\n  dst[3] = 0;\n  dst[4] = x * y * oneMinusCosine - z * s;\n  dst[5] = yy + (1 - yy) * c;\n  dst[6] = y * z * oneMinusCosine + x * s;\n  dst[7] = 0;\n  dst[8] = x * z * oneMinusCosine + y * s;\n  dst[9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by rotation around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  var r00 = xx + (1 - xx) * c;\n  var r01 = x * y * oneMinusCosine + z * s;\n  var r02 = x * z * oneMinusCosine - y * s;\n  var r10 = x * y * oneMinusCosine - z * s;\n  var r11 = yy + (1 - yy) * c;\n  var r12 = y * z * oneMinusCosine + x * s;\n  var r20 = x * z * oneMinusCosine + y * s;\n  var r21 = y * z * oneMinusCosine - x * s;\n  var r22 = zz + (1 - zz) * c;\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {module:twgl/v3.Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = v[0];\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = v[1];\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2];\n  dst[3] = v0 * m[0 * 4 + 3];\n  dst[4] = v1 * m[1 * 4 + 0];\n  dst[5] = v1 * m[1 * 4 + 1];\n  dst[6] = v1 * m[1 * 4 + 2];\n  dst[7] = v1 * m[1 * 4 + 3];\n  dst[8] = v2 * m[2 * 4 + 0];\n  dst[9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} dst optional vec3 to store result\n * @return {module:twgl/v3.Vec3} dst or new vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The direction.\n * @param {module:twgl/v3.Vec3} dst optional Vec3 to store result\n * @return {module:twgl/v3.Vec3} dst or new Vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The normal.\n * @param {module:twgl/v3.Vec3} [dst] The direction.\n * @return {module:twgl/v3.Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  var mi = inverse(m);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n\n/***/ }),\n\n/***/ \"./src/primitives.js\":\n/*!***************************!*\\\n  !*** ./src/primitives.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.create3DFVertices = create3DFVertices;\nexports.createAugmentedTypedArray = createAugmentedTypedArray;\nexports.createCubeVertices = createCubeVertices;\nexports.createPlaneVertices = createPlaneVertices;\nexports.createSphereVertices = createSphereVertices;\nexports.createTruncatedConeVertices = createTruncatedConeVertices;\nexports.createXYQuadVertices = createXYQuadVertices;\nexports.createCresentVertices = createCresentVertices;\nexports.createCylinderVertices = createCylinderVertices;\nexports.createTorusVertices = createTorusVertices;\nexports.createDiscVertices = createDiscVertices;\nexports.deindexVertices = deindexVertices;\nexports.flattenNormals = flattenNormals;\nexports.makeRandomVertexColors = makeRandomVertexColors;\nexports.reorientDirections = reorientDirections;\nexports.reorientNormals = reorientNormals;\nexports.reorientPositions = reorientPositions;\nexports.reorientVertices = reorientVertices;\nexports.concatVertices = concatVertices;\nexports.duplicateVertices = duplicateVertices;\nexports.createDiscBuffers = exports.createDiscBufferInfo = exports.createTorusBuffers = exports.createTorusBufferInfo = exports.createCylinderBuffers = exports.createCylinderBufferInfo = exports.createCresentBuffers = exports.createCresentBufferInfo = exports.createXYQuadBuffers = exports.createXYQuadBufferInfo = exports.createTruncatedConeBuffers = exports.createTruncatedConeBufferInfo = exports.createSphereBuffers = exports.createSphereBufferInfo = exports.createPlaneBuffers = exports.createPlaneBufferInfo = exports.createCubeBuffers = exports.createCubeBufferInfo = exports.create3DFBuffers = exports.create3DFBufferInfo = void 0;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(/*! ./attributes.js */ \"./src/attributes.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\"));\n\nvar m4 = _interopRequireWildcard(__webpack_require__(/*! ./m4.js */ \"./src/m4.js\"));\n\nvar v3 = _interopRequireWildcard(__webpack_require__(/*! ./v3.js */ \"./src/v3.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returing a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneArrays(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nvar getArray = attributes.getArray_; // eslint-disable-line\n\nvar getNumComponents = attributes.getNumComponents_; // eslint-disable-line\n\n/**\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\n */\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n * @private\n */\n\nfunction augmentTypedArray(typedArray, numComponents) {\n  var cursor = 0;\n\n  typedArray.push = function () {\n    for (var ii = 0; ii < arguments.length; ++ii) {\n      var value = arguments[ii];\n\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (var jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n\n  typedArray.reset = function (opt_index) {\n    cursor = opt_index || 0;\n  };\n\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function get() {\n      return this.length / this.numComponents | 0;\n    }\n  });\n  return typedArray;\n}\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  var Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n/**\n * Given indexed vertices creates a new set of vertices unindexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction deindexVertices(vertices) {\n  var indices = vertices.indices;\n  var newVertices = {};\n  var numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    var srcBuffer = vertices[channel];\n    var numComponents = srcBuffer.numComponents;\n    var dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n\n    for (var ii = 0; ii < numElements; ++ii) {\n      var ndx = indices[ii];\n      var offset = ndx * numComponents;\n\n      for (var jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n  return newVertices;\n}\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\n\n\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw \"can't flatten normals of indexed vertices. deindex them first\";\n  }\n\n  var normals = vertices.normal;\n  var numNormals = normals.length;\n\n  for (var ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    var nax = normals[ii + 0];\n    var nay = normals[ii + 1];\n    var naz = normals[ii + 2];\n    var nbx = normals[ii + 3];\n    var nby = normals[ii + 4];\n    var nbz = normals[ii + 5];\n    var ncx = normals[ii + 6];\n    var ncy = normals[ii + 7];\n    var ncz = normals[ii + 8]; // add them\n\n    var nx = nax + nbx + ncx;\n    var ny = nay + nby + ncy;\n    var nz = naz + nbz + ncz; // normalize them\n\n    var length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n    nx /= length;\n    ny /= length;\n    nz /= length; // copy them back in\n\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  var len = array.length;\n  var tmp = new Float32Array(3);\n\n  for (var ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n/**\n * Reorients directions by the given matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n/**\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\n */\n\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function (name) {\n    var array = arrays[name];\n\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [xOffset + -1 * size, yOffset + -1 * size, xOffset + 1 * size, yOffset + -1 * size, xOffset + -1 * size, yOffset + 1 * size, xOffset + 1 * size, yOffset + 1 * size]\n    },\n    normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    texcoord: [0, 0, 1, 0, 0, 1, 1, 1],\n    indices: [0, 1, 2, 2, 1, 3]\n  };\n}\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createPlaneVertices(width, depth, subdivisionsWidth, subdivisionsDepth, matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n  var numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (var z = 0; z <= subdivisionsDepth; z++) {\n    for (var x = 0; x <= subdivisionsWidth; x++) {\n      var u = x / subdivisionsWidth;\n      var v = z / subdivisionsDepth;\n      positions.push(width * u - width * 0.5, 0, depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  var numVertsAcross = subdivisionsWidth + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (var _z = 0; _z < subdivisionsDepth; _z++) {\n    // eslint-disable-line\n    for (var _x = 0; _x < subdivisionsWidth; _x++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_z + 0) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x, (_z + 0) * numVertsAcross + _x + 1); // Make triangle 2 of quad.\n\n      indices.push((_z + 1) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x + 1, (_z + 0) * numVertsAcross + _x + 1);\n    }\n  }\n\n  var arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  }, matrix);\n  return arrays;\n}\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createSphereVertices(radius, subdivisionsAxis, subdivisionsHeight, opt_startLatitudeInRadians, opt_endLatitudeInRadians, opt_startLongitudeInRadians, opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || Math.PI * 2;\n  var latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  var longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians; // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n\n  var numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices); // Generate the individual vertices in our vertex buffer.\n\n  for (var y = 0; y <= subdivisionsHeight; y++) {\n    for (var x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      var u = x / subdivisionsAxis;\n      var v = y / subdivisionsHeight;\n      var theta = longRange * u + opt_startLongitudeInRadians;\n      var phi = latRange * v + opt_startLatitudeInRadians;\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      var ux = cosTheta * sinPhi;\n      var uy = cosPhi;\n      var uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  var numVertsAround = subdivisionsAxis + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n\n  for (var _x2 = 0; _x2 < subdivisionsAxis; _x2++) {\n    // eslint-disable-line\n    for (var _y = 0; _y < subdivisionsHeight; _y++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_y + 0) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2); // Make triangle 2 of quad.\n\n      indices.push((_y + 1) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2 + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n * @private\n */\n\n\nvar CUBE_FACE_INDICES = [[3, 7, 5, 1], // right\n[6, 2, 0, 4], // left\n[6, 7, 3, 2], // ??\n[0, 1, 5, 4], // ??\n[7, 6, 4, 5], // front\n[2, 3, 1, 0]];\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\nfunction createCubeVertices(size) {\n  size = size || 1;\n  var k = size / 2;\n  var cornerVertices = [[-k, -k, -k], [+k, -k, -k], [-k, +k, -k], [+k, +k, -k], [-k, -k, +k], [+k, -k, +k], [-k, +k, +k], [+k, +k, +k]];\n  var faceNormals = [[+1, +0, +0], [-1, +0, +0], [+0, +1, +0], [+0, -1, +0], [+0, +0, +1], [+0, +0, -1]];\n  var uvCoords = [[1, 0], [0, 0], [0, 1], [1, 1]];\n  var numVertices = 6 * 4;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (var f = 0; f < 6; ++f) {\n    var faceIndices = CUBE_FACE_INDICES[f];\n\n    for (var v = 0; v < 4; ++v) {\n      var position = cornerVertices[faceIndices[v]];\n      var normal = faceNormals[f];\n      var uv = uvCoords[v]; // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n    } // Two triangles make a square face.\n\n\n    var offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTruncatedConeVertices(bottomRadius, topRadius, height, radialSubdivisions, verticalSubdivisions, opt_topCap, opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  var topCap = opt_topCap === undefined ? true : opt_topCap;\n  var bottomCap = opt_bottomCap === undefined ? true : opt_bottomCap;\n  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  var numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\n  var vertsAroundEdge = radialSubdivisions + 1; // The slant of the cone is constant across its surface\n\n  var slant = Math.atan2(bottomRadius - topRadius, height);\n  var cosSlant = Math.cos(slant);\n  var sinSlant = Math.sin(slant);\n  var start = topCap ? -2 : 0;\n  var end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (var yy = start; yy <= end; ++yy) {\n    var v = yy / verticalSubdivisions;\n    var y = height * v;\n    var ringRadius = void 0;\n\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius + (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n\n    y -= height / 2;\n\n    for (var ii = 0; ii < vertsAroundEdge; ++ii) {\n      var sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      var cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      normals.push(yy < 0 || yy > verticalSubdivisions ? 0 : sin * cosSlant, yy < 0 ? -1 : yy > verticalSubdivisions ? 1 : sinSlant, yy < 0 || yy > verticalSubdivisions ? 0 : cos * cosSlant);\n      texcoords.push(ii / radialSubdivisions, 1 - v);\n    }\n  }\n\n  for (var _yy = 0; _yy < verticalSubdivisions + extra; ++_yy) {\n    // eslint-disable-line\n    for (var _ii = 0; _ii < radialSubdivisions; ++_ii) {\n      // eslint-disable-line\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 0) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii);\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 0 + _ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n * @private\n */\n\n\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  var data = [];\n\n  for (var ii = 0; ii < rleData.length; ii += 4) {\n    var runLength = rleData[ii];\n    var element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n\n    for (var jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n\n  return data;\n}\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction create3DFVertices() {\n  var positions = [// left column front\n  0, 0, 0, 0, 150, 0, 30, 0, 0, 0, 150, 0, 30, 150, 0, 30, 0, 0, // top rung front\n  30, 0, 0, 30, 30, 0, 100, 0, 0, 30, 30, 0, 100, 30, 0, 100, 0, 0, // middle rung front\n  30, 60, 0, 30, 90, 0, 67, 60, 0, 30, 90, 0, 67, 90, 0, 67, 60, 0, // left column back\n  0, 0, 30, 30, 0, 30, 0, 150, 30, 0, 150, 30, 30, 0, 30, 30, 150, 30, // top rung back\n  30, 0, 30, 100, 0, 30, 30, 30, 30, 30, 30, 30, 100, 0, 30, 100, 30, 30, // middle rung back\n  30, 60, 30, 67, 60, 30, 30, 90, 30, 30, 90, 30, 67, 60, 30, 67, 90, 30, // top\n  0, 0, 0, 100, 0, 0, 100, 0, 30, 0, 0, 0, 100, 0, 30, 0, 0, 30, // top rung front\n  100, 0, 0, 100, 30, 0, 100, 30, 30, 100, 0, 0, 100, 30, 30, 100, 0, 30, // under top rung\n  30, 30, 0, 30, 30, 30, 100, 30, 30, 30, 30, 0, 100, 30, 30, 100, 30, 0, // between top rung and middle\n  30, 30, 0, 30, 60, 30, 30, 30, 30, 30, 30, 0, 30, 60, 0, 30, 60, 30, // top of middle rung\n  30, 60, 0, 67, 60, 30, 30, 60, 30, 30, 60, 0, 67, 60, 0, 67, 60, 30, // front of middle rung\n  67, 60, 0, 67, 90, 30, 67, 60, 30, 67, 60, 0, 67, 90, 0, 67, 90, 30, // bottom of middle rung.\n  30, 90, 0, 30, 90, 30, 67, 90, 30, 30, 90, 0, 67, 90, 30, 67, 90, 0, // front of bottom\n  30, 90, 0, 30, 150, 30, 30, 90, 30, 30, 90, 0, 30, 150, 0, 30, 150, 30, // bottom\n  0, 150, 0, 0, 150, 30, 30, 150, 30, 0, 150, 0, 30, 150, 30, 30, 150, 0, // left side\n  0, 0, 0, 0, 0, 30, 0, 150, 30, 0, 0, 0, 0, 150, 30, 0, 150, 0];\n  var texcoords = [// left column front\n  0.22, 0.19, 0.22, 0.79, 0.34, 0.19, 0.22, 0.79, 0.34, 0.79, 0.34, 0.19, // top rung front\n  0.34, 0.19, 0.34, 0.31, 0.62, 0.19, 0.34, 0.31, 0.62, 0.31, 0.62, 0.19, // middle rung front\n  0.34, 0.43, 0.34, 0.55, 0.49, 0.43, 0.34, 0.55, 0.49, 0.55, 0.49, 0.43, // left column back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // middle rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // top rung front\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // under top rung\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // between top rung and middle\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // top of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // front of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom of middle rung.\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // front of bottom\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // left side\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0];\n  var normals = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 0, 0, 1, // left column back\n  // top rung back\n  // middle rung back\n  18, 0, 0, -1, // top\n  6, 0, 1, 0, // top rung front\n  6, 1, 0, 0, // under top rung\n  6, 0, -1, 0, // between top rung and middle\n  6, 1, 0, 0, // top of middle rung\n  6, 0, 1, 0, // front of middle rung\n  6, 1, 0, 0, // bottom of middle rung.\n  6, 0, -1, 0, // front of bottom\n  6, 1, 0, 0, // bottom\n  6, 0, -1, 0, // left side\n  6, -1, 0, 0]);\n  var colors = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 200, 70, 120, // left column back\n  // top rung back\n  // middle rung back\n  18, 80, 70, 200, // top\n  6, 70, 200, 210, // top rung front\n  6, 200, 200, 70, // under top rung\n  6, 210, 100, 70, // between top rung and middle\n  6, 210, 160, 70, // top of middle rung\n  6, 70, 180, 210, // front of middle rung\n  6, 100, 70, 210, // bottom of middle rung.\n  6, 76, 210, 100, // front of bottom\n  6, 140, 210, 80, // bottom\n  6, 90, 130, 110, // left side\n  6, 160, 160, 220], [255]);\n  var numVerts = positions.length / 3;\n  var arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2, numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array)\n  };\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (var ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n/**\n * Creates cresent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates cresent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates cresent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCresentVertices(verticalRadius, outerRadius, innerRadius, thickness, subdivisionsDown, startOffset, endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset = endOffset || 1;\n  var subdivisionsThick = 2;\n  var offsetRange = endOffset - startOffset;\n  var numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (var z = 0; z <= subdivisionsDown; z++) {\n      var uBack = x / (subdivisionsThick - 1);\n      var v = z / subdivisionsDown;\n      var xBack = (uBack - 0.5) * 2;\n      var angle = (startOffset + v * offsetRange) * Math.PI;\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      var radius = lerp(verticalRadius, arcRadius, s);\n      var px = xBack * thickness;\n      var py = c * verticalRadius;\n      var pz = s * radius;\n      positions.push(px, py, pz);\n      var n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  } // Generate the individual vertices in our vertex buffer.\n\n\n  for (var x = 0; x < subdivisionsThick; x++) {\n    var uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  } // Do outer surface.\n\n\n  var indices = createAugmentedTypedArray(3, subdivisionsDown * 2 * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (var z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(leftArcOffset + z + 0, leftArcOffset + z + 1, rightArcOffset + z + 0); // Make triangle 2 of quad.\n\n      indices.push(leftArcOffset + z + 1, rightArcOffset + z + 1, rightArcOffset + z + 0);\n    }\n  }\n\n  var numVerticesDown = subdivisionsDown + 1; // front\n\n  createSurface(numVerticesDown * 0, numVerticesDown * 4); // right\n\n  createSurface(numVerticesDown * 5, numVerticesDown * 7); // back\n\n  createSurface(numVerticesDown * 6, numVerticesDown * 2); // left\n\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n/**\n * Creates cylinder buffers. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCylinderBuffers\n */\n\n/**\n * Creates cylinder vertices. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCylinderVertices(radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap) {\n  return createTruncatedConeVertices(radius, radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap);\n}\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTorusVertices(radius, thickness, radialSubdivisions, bodySubdivisions, startAngle, endAngle) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  var range = endAngle - startAngle;\n  var radialParts = radialSubdivisions + 1;\n  var bodyParts = bodySubdivisions + 1;\n  var numVertices = radialParts * bodyParts;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * bodySubdivisions * 2, Uint16Array);\n\n  for (var slice = 0; slice < bodyParts; ++slice) {\n    var v = slice / bodySubdivisions;\n    var sliceAngle = v * Math.PI * 2;\n    var sliceSin = Math.sin(sliceAngle);\n    var ringRadius = radius + sliceSin * thickness;\n    var ny = Math.cos(sliceAngle);\n    var y = ny * thickness;\n\n    for (var ring = 0; ring < radialParts; ++ring) {\n      var u = ring / radialSubdivisions;\n      var ringAngle = startAngle + u * range;\n      var xSin = Math.sin(ringAngle);\n      var zCos = Math.cos(ringAngle);\n      var x = xSin * ringRadius;\n      var z = zCos * ringRadius;\n      var nx = xSin * sliceSin;\n      var nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (var _slice = 0; _slice < bodySubdivisions; ++_slice) {\n    // eslint-disable-line\n    for (var _ring = 0; _ring < radialSubdivisions; ++_ring) {\n      // eslint-disable-line\n      var nextRingIndex = 1 + _ring;\n      var nextSliceIndex = 1 + _slice;\n      indices.push(radialParts * _slice + _ring, radialParts * nextSliceIndex + _ring, radialParts * _slice + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + _ring, radialParts * nextSliceIndex + nextRingIndex, radialParts * _slice + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createDiscVertices(radius, divisions, stacks, innerRadius, stackPower) {\n  if (divisions < 3) {\n    throw Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0; // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n\n  var numVertices = (divisions + 1) * (stacks + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n  var firstIndex = 0;\n  var radiusSpan = radius - innerRadius;\n  var pointsPerStack = divisions + 1; // Build the disk one stack at a time.\n\n  for (var stack = 0; stack <= stacks; ++stack) {\n    var stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (var i = 0; i <= divisions; ++i) {\n      var theta = 2.0 * Math.PI * i / divisions;\n      var x = stackRadius * Math.cos(theta);\n      var z = stackRadius * Math.sin(theta);\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - i / divisions, stack / stacks);\n\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        var a = firstIndex + (i + 1);\n        var b = firstIndex + i;\n        var c = firstIndex + i - pointsPerStack;\n        var d = firstIndex + (i + 1) - pointsPerStack; // Make a quad of the vertices a, b, c, d.\n\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n * @private\n */\n\n\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  var numElements = vertices.position.numElements;\n  var vcolors = createAugmentedTypedArray(4, numElements, Uint8Array);\n\n  var rand = options.rand || function (ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n\n  vertices.color = vcolors;\n\n  if (vertices.indices) {\n    // just make random colors if index\n    for (var ii = 0; ii < numElements; ++ii) {\n      vcolors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    var numVertsPerColor = options.vertsPerColor || 3;\n    var numSets = numElements / numVertsPerColor;\n\n    for (var _ii2 = 0; _ii2 < numSets; ++_ii2) {\n      // eslint-disable-line\n      var color = [rand(_ii2, 0), rand(_ii2, 1), rand(_ii2, 2), rand(_ii2, 3)];\n\n      for (var jj = 0; jj < numVertsPerColor; ++jj) {\n        vcolors.push(color);\n      }\n    }\n  }\n\n  return vertices;\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n * @private\n */\n\n\nfunction createBufferFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n * @private\n */\n\n\nfunction createBufferInfoFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(null, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nvar arraySpecPropertyNames = [\"numComponents\", \"size\", \"type\", \"normalize\", \"stride\", \"offset\", \"attrib\", \"name\", \"attribName\"];\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n * @private\n */\n\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  var length = src.length;\n\n  for (var ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n * @private\n */\n\n\nfunction createArrayOfSameType(srcArray, length) {\n  var arraySrc = getArray(srcArray);\n  var newArray = new arraySrc.constructor(length);\n  var newArraySpec = newArray; // If it appears to have been augmented make new one augemented\n\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  } // If it was a fullspec make new one a fullspec\n\n\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n\n  return newArraySpec;\n}\n/**\n * Concatinates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primtiives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatinated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction concatVertices(arrayOfArrays) {\n  var names = {};\n  var baseName; // get names of all arrays.\n  // and numElements for each set of vertices\n\n  var _loop = function _loop(ii) {\n    var arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function (name) {\n      // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n\n      var arrayInfo = arrays[name];\n      var numComponents = getNumComponents(arrayInfo, name);\n      var array = getArray(arrayInfo);\n      var numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  };\n\n  for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n    _loop(ii);\n  } // compute length of combined array\n  // and return one for reference\n\n\n  function getLengthOfCombinedArrays(name) {\n    var length = 0;\n    var arraySpec;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n      length += array.length;\n\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n\n    return {\n      length: length,\n      spec: arraySpec\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    var baseIndex = 0;\n    var offset = 0;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n\n      offset += array.length;\n    }\n  }\n\n  var base = names[baseName];\n  var newArrays = {};\n  Object.keys(names).forEach(function (name) {\n    var info = getLengthOfCombinedArrays(name);\n    var newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The dupilicated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction duplicateVertices(arrays) {\n  var newArrays = {};\n  Object.keys(arrays).forEach(function (name) {\n    var arraySpec = arrays[name];\n    var srcArray = getArray(arraySpec);\n    var newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nvar create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nexports.create3DFBufferInfo = create3DFBufferInfo;\nvar create3DFBuffers = createBufferFunc(create3DFVertices);\nexports.create3DFBuffers = create3DFBuffers;\nvar createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nexports.createCubeBufferInfo = createCubeBufferInfo;\nvar createCubeBuffers = createBufferFunc(createCubeVertices);\nexports.createCubeBuffers = createCubeBuffers;\nvar createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nexports.createPlaneBufferInfo = createPlaneBufferInfo;\nvar createPlaneBuffers = createBufferFunc(createPlaneVertices);\nexports.createPlaneBuffers = createPlaneBuffers;\nvar createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nexports.createSphereBufferInfo = createSphereBufferInfo;\nvar createSphereBuffers = createBufferFunc(createSphereVertices);\nexports.createSphereBuffers = createSphereBuffers;\nvar createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBufferInfo = createTruncatedConeBufferInfo;\nvar createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBuffers = createTruncatedConeBuffers;\nvar createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nexports.createXYQuadBufferInfo = createXYQuadBufferInfo;\nvar createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nexports.createXYQuadBuffers = createXYQuadBuffers;\nvar createCresentBufferInfo = createBufferInfoFunc(createCresentVertices);\nexports.createCresentBufferInfo = createCresentBufferInfo;\nvar createCresentBuffers = createBufferFunc(createCresentVertices);\nexports.createCresentBuffers = createCresentBuffers;\nvar createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nexports.createCylinderBufferInfo = createCylinderBufferInfo;\nvar createCylinderBuffers = createBufferFunc(createCylinderVertices);\nexports.createCylinderBuffers = createCylinderBuffers;\nvar createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nexports.createTorusBufferInfo = createTorusBufferInfo;\nvar createTorusBuffers = createBufferFunc(createTorusVertices);\nexports.createTorusBuffers = createTorusBuffers;\nvar createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nexports.createDiscBufferInfo = createDiscBufferInfo;\nvar createDiscBuffers = createBufferFunc(createDiscVertices);\nexports.createDiscBuffers = createDiscBuffers;\n\n/***/ }),\n\n/***/ \"./src/programs.js\":\n/*!*************************!*\\\n  !*** ./src/programs.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttributeSetters = createAttributeSetters;\nexports.createProgram = createProgram;\nexports.createProgramFromScripts = createProgramFromScripts;\nexports.createProgramFromSources = createProgramFromSources;\nexports.createProgramInfo = createProgramInfo;\nexports.createProgramInfoFromProgram = createProgramInfoFromProgram;\nexports.createUniformSetters = createUniformSetters;\nexports.createUniformBlockSpecFromProgram = createUniformBlockSpecFromProgram;\nexports.createUniformBlockInfoFromProgram = createUniformBlockInfoFromProgram;\nexports.createUniformBlockInfo = createUniformBlockInfo;\nexports.createTransformFeedback = createTransformFeedback;\nexports.createTransformFeedbackInfo = createTransformFeedbackInfo;\nexports.bindTransformFeedbackInfo = bindTransformFeedbackInfo;\nexports.setAttributes = setAttributes;\nexports.setBuffersAndAttributes = setBuffersAndAttributes;\nexports.setUniforms = setUniforms;\nexports.setUniformBlock = setUniformBlock;\nexports.setBlockUniforms = setBlockUniforms;\nexports.bindUniformBlock = bindUniformBlock;\n\nvar utils = _interopRequireWildcard(__webpack_require__(/*! ./utils.js */ \"./src/utils.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\nvar error = helper.error;\nvar warn = helper.warn;\nvar getElementById = typeof document !== 'undefined' && document.getElementById ? document.getElementById.bind(document) : function () {\n  return null;\n};\nvar FLOAT = 0x1406;\nvar FLOAT_VEC2 = 0x8B50;\nvar FLOAT_VEC3 = 0x8B51;\nvar FLOAT_VEC4 = 0x8B52;\nvar INT = 0x1404;\nvar INT_VEC2 = 0x8B53;\nvar INT_VEC3 = 0x8B54;\nvar INT_VEC4 = 0x8B55;\nvar BOOL = 0x8B56;\nvar BOOL_VEC2 = 0x8B57;\nvar BOOL_VEC3 = 0x8B58;\nvar BOOL_VEC4 = 0x8B59;\nvar FLOAT_MAT2 = 0x8B5A;\nvar FLOAT_MAT3 = 0x8B5B;\nvar FLOAT_MAT4 = 0x8B5C;\nvar SAMPLER_2D = 0x8B5E;\nvar SAMPLER_CUBE = 0x8B60;\nvar SAMPLER_3D = 0x8B5F;\nvar SAMPLER_2D_SHADOW = 0x8B62;\nvar FLOAT_MAT2x3 = 0x8B65;\nvar FLOAT_MAT2x4 = 0x8B66;\nvar FLOAT_MAT3x2 = 0x8B67;\nvar FLOAT_MAT3x4 = 0x8B68;\nvar FLOAT_MAT4x2 = 0x8B69;\nvar FLOAT_MAT4x3 = 0x8B6A;\nvar SAMPLER_2D_ARRAY = 0x8DC1;\nvar SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nvar SAMPLER_CUBE_SHADOW = 0x8DC5;\nvar UNSIGNED_INT = 0x1405;\nvar UNSIGNED_INT_VEC2 = 0x8DC6;\nvar UNSIGNED_INT_VEC3 = 0x8DC7;\nvar UNSIGNED_INT_VEC4 = 0x8DC8;\nvar INT_SAMPLER_2D = 0x8DCA;\nvar INT_SAMPLER_3D = 0x8DCB;\nvar INT_SAMPLER_CUBE = 0x8DCC;\nvar INT_SAMPLER_2D_ARRAY = 0x8DCF;\nvar UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nvar UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nvar UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nvar UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\nvar TEXTURE_2D = 0x0DE1;\nvar TEXTURE_CUBE_MAP = 0x8513;\nvar TEXTURE_3D = 0x806F;\nvar TEXTURE_2D_ARRAY = 0x8C1A;\nvar typeMap = {};\n/**\n * Returns the corresponding bind point for a given sampler type\n */\n\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n} // This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\n\nfunction floatSetter(gl, location) {\n  return function (v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function (v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function (v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function (textureOrPair) {\n    var texture;\n    var sampler;\n\n    if (helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function (texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  var units = new Int32Array(size);\n\n  for (var ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (textureOrPair, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      var texture;\n      var sampler;\n\n      if (helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (texture, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT] = {\n  Type: Float32Array,\n  size: 4,\n  setter: floatSetter,\n  arraySetter: floatArraySetter\n};\ntypeMap[FLOAT_VEC2] = {\n  Type: Float32Array,\n  size: 8,\n  setter: floatVec2Setter\n};\ntypeMap[FLOAT_VEC3] = {\n  Type: Float32Array,\n  size: 12,\n  setter: floatVec3Setter\n};\ntypeMap[FLOAT_VEC4] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatVec4Setter\n};\ntypeMap[INT] = {\n  Type: Int32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[INT_VEC2] = {\n  Type: Int32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[INT_VEC3] = {\n  Type: Int32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[INT_VEC4] = {\n  Type: Int32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[UNSIGNED_INT] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: uintSetter,\n  arraySetter: uintArraySetter\n};\ntypeMap[UNSIGNED_INT_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: uintVec2Setter\n};\ntypeMap[UNSIGNED_INT_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: uintVec3Setter\n};\ntypeMap[UNSIGNED_INT_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: uintVec4Setter\n};\ntypeMap[BOOL] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[BOOL_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[BOOL_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[BOOL_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[FLOAT_MAT2] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatMat2Setter\n};\ntypeMap[FLOAT_MAT3] = {\n  Type: Float32Array,\n  size: 36,\n  setter: floatMat3Setter\n};\ntypeMap[FLOAT_MAT4] = {\n  Type: Float32Array,\n  size: 64,\n  setter: floatMat4Setter\n};\ntypeMap[FLOAT_MAT2x3] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat23Setter\n};\ntypeMap[FLOAT_MAT2x4] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat24Setter\n};\ntypeMap[FLOAT_MAT3x2] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat32Setter\n};\ntypeMap[FLOAT_MAT3x4] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat34Setter\n};\ntypeMap[FLOAT_MAT4x2] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat42Setter\n};\ntypeMap[FLOAT_MAT4x3] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat43Setter\n};\ntypeMap[SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[SAMPLER_2D_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_2D_ARRAY_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_CUBE_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\n\nfunction floatAttribSetter(gl, index) {\n  return function (b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      gl.vertexAttrib4fv(index, b.value);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function (b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      gl.vertexAttrib4iv(index, b.value);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function (b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      gl.vertexAttrib4uiv(index, b.value);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.UNSIGNED_INT, b.stride || 0, b.offset || 0);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  var defaultSize = typeInfo.size;\n  var count = typeInfo.count;\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    var numComponents = b.size || b.numComponents || defaultSize;\n    var size = numComponents / count;\n    var type = b.type || gl.FLOAT;\n    var typeInfo = typeMap[type];\n    var stride = typeInfo.size * numComponents;\n    var normalize = b.normalize || false;\n    var offset = b.offset || 0;\n    var rowOffset = stride / count;\n\n    for (var i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, size, type, normalize, stride, offset + rowOffset * i);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\nvar attrTypeMap = {};\nattrTypeMap[FLOAT] = {\n  size: 4,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC2] = {\n  size: 8,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC3] = {\n  size: 12,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC4] = {\n  size: 16,\n  setter: floatAttribSetter\n};\nattrTypeMap[INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT] = {\n  size: 4,\n  setter: uintAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC2] = {\n  size: 8,\n  setter: uintAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC3] = {\n  size: 12,\n  setter: uintAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC4] = {\n  size: 16,\n  setter: uintAttribSetter\n};\nattrTypeMap[BOOL] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[FLOAT_MAT2] = {\n  size: 4,\n  setter: matAttribSetter,\n  count: 2\n};\nattrTypeMap[FLOAT_MAT3] = {\n  size: 9,\n  setter: matAttribSetter,\n  count: 3\n};\nattrTypeMap[FLOAT_MAT4] = {\n  size: 16,\n  setter: matAttribSetter,\n  count: 4\n}; // make sure we don't see a global gl\n\nvar gl = undefined; // eslint-disable-line\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nfunction addLineNumbers(src, lineOffset) {\n  lineOffset = lineOffset || 0;\n  ++lineOffset;\n  return src.split(\"\\n\").map(function (line, ndx) {\n    return ndx + lineOffset + \": \" + line;\n  }).join(\"\\n\");\n}\n\nvar spaceRE = /^[ \\t]*\\n/;\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n * @private\n */\n\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  var errFn = opt_errorCallback || error; // Create the shader object\n\n  var shader = gl.createShader(shaderType); // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n\n  var lineOffset = 0;\n\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  } // Load the shader source\n\n\n  gl.shaderSource(shader, shaderSource); // Compile the shader\n\n  gl.compileShader(shader); // Check the compile status\n\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    var lastError = gl.getShaderInfoLog(shader);\n    errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments pased on\n * @private\n */\n\n\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  var transformFeedbackVaryings;\n\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n\n    var opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n  }\n\n  var options = {\n    errorCallback: opt_errorCallback || error,\n    transformFeedbackVaryings: transformFeedbackVaryings\n  };\n\n  if (opt_attribs) {\n    var attribLocations = {};\n\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function (attrib, ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nvar defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return gl.FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return gl.VERTEX_SHADER;\n  }\n\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function (shader) {\n    gl.deleteShader(shader);\n  });\n}\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var realShaders = [];\n  var newShaders = [];\n\n  for (var ndx = 0; ndx < shaders.length; ++ndx) {\n    var shader = shaders[ndx];\n\n    if (typeof shader === 'string') {\n      var elem = getElementById(shader);\n      var src = elem ? elem.text : shader;\n      var type = gl[defaultShaderType[ndx]];\n\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n\n    if (helper.isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  var program = gl.createProgram();\n  realShaders.forEach(function (shader) {\n    gl.attachShader(program, shader);\n  });\n\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function (attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n\n  var varyings = progOptions.transformFeedbackVaryings;\n\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || gl.SEPARATE_ATTRIBS);\n  }\n\n  gl.linkProgram(program); // Check the link status\n\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n  if (!linked) {\n    // something went wrong with the link\n    var lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(\"Error in program linking:\" + lastError);\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  return program;\n}\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n * @private\n */\n\n\nfunction createShaderFromScript(gl, scriptId, opt_shaderType, opt_errorCallback) {\n  var shaderSource = \"\";\n  var shaderScript = getElementById(scriptId);\n\n  if (!shaderScript) {\n    throw \"*** Error: unknown script element\" + scriptId;\n  }\n\n  shaderSource = shaderScript.text;\n  var shaderType = opt_shaderType || getShaderTypeFromScriptType(gl, shaderScript.type);\n\n  if (!shaderType) {\n    throw \"*** Error: unknown shader type\";\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromScripts(gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderScriptIds.length; ++ii) {\n    var shader = createShaderFromScript(gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderSources.length; ++ii) {\n    var shader = loadShader(gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\n\n\nfunction isBuiltIn(info) {\n  var name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformSetters(gl, program) {\n  var textureUnit = 0;\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n\n  function createUniformSetter(program, uniformInfo) {\n    var location = gl.getUniformLocation(program, uniformInfo.name);\n    var isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    var type = uniformInfo.type;\n    var typeInfo = typeMap[type];\n\n    if (!typeInfo) {\n      throw \"unknown type: 0x\" + type.toString(16); // we should never get here.\n    }\n\n    var setter;\n\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      var unit = textureUnit;\n      textureUnit += uniformInfo.size;\n\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n\n    setter.location = location;\n    return setter;\n  }\n\n  var uniformSetters = {};\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n\n    var name = uniformInfo.name; // remove the array suffix.\n\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n\n    var setter = createUniformSetter(program, uniformInfo);\n    uniformSetters[name] = setter;\n  }\n\n  return uniformSetters;\n}\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedbackInfo(gl, program) {\n  var info = {};\n  var numVaryings = gl.getProgramParameter(program, gl.TRANSFORM_FEEDBACK_VARYINGS);\n\n  for (var ii = 0; ii < numVaryings; ++ii) {\n    var varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size\n    };\n  }\n\n  return info;\n}\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\n\n\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      var buf = bufferInfo[name];\n\n      if (buf.offset) {\n        gl.bindBufferRange(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  var tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\n  return tf;\n}\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanitory\n * @property {bool} usedByFragmentShader Self explanitory\n * @property {bool} used Self explanitory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformData = [];\n  var uniformIndices = [];\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    } // REMOVE [0]?\n\n\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [[\"UNIFORM_TYPE\", \"type\"], [\"UNIFORM_SIZE\", \"size\"], // num elements\n  [\"UNIFORM_BLOCK_INDEX\", \"blockNdx\"], [\"UNIFORM_OFFSET\", \"offset\"]].forEach(function (pair) {\n    var pname = pair[0];\n    var key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function (value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n  var blockSpecs = {};\n  var numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n\n  for (var _ii = 0; _ii < numUniformBlocks; ++_ii) {\n    var name = gl.getActiveUniformBlockName(program, _ii);\n    var blockSpec = {\n      index: _ii,\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)\n    };\n    blockSpec.used = blockSpec.usedByVertexSahder || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData\n  };\n}\n\nvar arraySuffixRE = /\\[\\d+\\]\\.$/; // better way to check?\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uinformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  var blockSpecs = uniformBlockSpec.blockSpecs;\n  var uniformData = uniformBlockSpec.uniformData;\n  var blockSpec = blockSpecs[blockName];\n\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {}\n    };\n  }\n\n  var array = new ArrayBuffer(blockSpec.size);\n  var buffer = gl.createBuffer();\n  var uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n  var prefix = blockName + \".\";\n\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n\n  var uniforms = {};\n  blockSpec.uniformIndices.forEach(function (uniformNdx) {\n    var data = uniformData[uniformNdx];\n    var typeInfo = typeMap[data.type];\n    var Type = typeInfo.Type;\n    var length = data.size * typeInfo.size;\n    var name = data.name;\n\n    if (name.substr(0, prefix.length) === prefix) {\n      name = name.substr(prefix.length);\n    }\n\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n  });\n  return {\n    name: blockName,\n    array: array,\n    asFloat: new Float32Array(array),\n    // for debugging\n    buffer: buffer,\n    uniforms: uniforms\n  };\n}\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n/**\n * Binds a unform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the valus into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\n\n\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  var uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  var blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n\n  if (blockSpec) {\n    var bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\n  }\n}\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  var uniforms = uniformBlockInfo.uniforms;\n\n  for (var name in values) {\n    var array = uniforms[name];\n\n    if (array) {\n      var value = values[name];\n\n      if (value.length) {\n        array.set(value);\n      } else {\n        array[0] = value;\n      }\n    }\n  }\n}\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniforms(setters, values) {\n  // eslint-disable-line\n  var actualSetters = setters.uniformSetters || setters;\n  var numArgs = arguments.length;\n\n  for (var andx = 1; andx < numArgs; ++andx) {\n    var vals = arguments[andx];\n\n    if (Array.isArray(vals)) {\n      var numValues = vals.length;\n\n      for (var ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, vals[ii]);\n      }\n    } else {\n      for (var name in vals) {\n        var setter = actualSetters[name];\n\n        if (setter) {\n          setter(vals[name]);\n        }\n      }\n    }\n  }\n}\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createAttributeSetters(gl, program) {\n  var attribSetters = {};\n  var numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    var attribInfo = gl.getActiveAttrib(program, ii);\n\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n\n    var index = gl.getAttribLocation(program, attribInfo.name);\n    var typeInfo = attrTypeMap[attribInfo.type];\n    var setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\n\n\nfunction setAttributes(setters, buffers) {\n  for (var name in buffers) {\n    var setter = setters[name];\n\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivilent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgrmaInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n\n    if (buffers.indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @propetty {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfoFromProgram(gl, program) {\n  var uniformSetters = createUniformSetters(gl, program);\n  var attribSetters = createAttributeSetters(gl, program);\n  var programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfo(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var good = true;\n  shaderSources = shaderSources.map(function (source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      var script = getElementById(source);\n\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n\n    return source;\n  });\n\n  if (!good) {\n    return null;\n  }\n\n  var program = createProgramFromSources(gl, shaderSources, progOptions);\n\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\n/***/ }),\n\n/***/ \"./src/textures.js\":\n/*!*************************!*\\\n  !*** ./src/textures.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.setTextureDefaults_ = setDefaults;\nexports.createSampler = createSampler;\nexports.createSamplers = createSamplers;\nexports.setSamplerParameters = setSamplerParameters;\nexports.createTexture = createTexture;\nexports.setEmptyTexture = setEmptyTexture;\nexports.setTextureFromArray = setTextureFromArray;\nexports.loadTextureFromUrl = loadTextureFromUrl;\nexports.setTextureFromElement = setTextureFromElement;\nexports.setTextureFilteringForSize = setTextureFilteringForSize;\nexports.setTextureParameters = setTextureParameters;\nexports.setDefaultTextureColor = setDefaultTextureColor;\nexports.createTextures = createTextures;\nexports.resizeTexture = resizeTexture;\nexports.canGenerateMipmap = canGenerateMipmap;\nexports.canFilter = canFilter;\nexports.getNumComponentsForFormat = getNumComponentsForFormat;\nexports.getBytesPerElementForInternalFormat = getBytesPerElementForInternalFormat;\nexports.getFormatAndTypeForInternalFormat = getFormatAndTypeForInternalFormat;\n\nvar utils = _interopRequireWildcard(__webpack_require__(/*! ./utils.js */ \"./src/utils.js\"));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined\n};\nvar isArrayBuffer = typedArrays.isArrayBuffer; // Should we make this on demand?\n\nvar ctx = typeof document !== 'undefined' && document.createElement ? document.createElement(\"canvas\").getContext(\"2d\") : null; // NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an imagebitmap to be cut. Unfortunately cutting an imagebitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\n\nvar ALPHA = 0x1906;\nvar RGB = 0x1907;\nvar RGBA = 0x1908;\nvar LUMINANCE = 0x1909;\nvar LUMINANCE_ALPHA = 0x190A;\nvar DEPTH_COMPONENT = 0x1902;\nvar DEPTH_STENCIL = 0x84F9;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\nvar R8 = 0x8229;\nvar R8_SNORM = 0x8F94;\nvar R16F = 0x822D;\nvar R32F = 0x822E;\nvar R8UI = 0x8232;\nvar R8I = 0x8231;\nvar RG16UI = 0x823A;\nvar RG16I = 0x8239;\nvar RG32UI = 0x823C;\nvar RG32I = 0x823B;\nvar RG8 = 0x822B;\nvar RG8_SNORM = 0x8F95;\nvar RG16F = 0x822F;\nvar RG32F = 0x8230;\nvar RG8UI = 0x8238;\nvar RG8I = 0x8237;\nvar R16UI = 0x8234;\nvar R16I = 0x8233;\nvar R32UI = 0x8236;\nvar R32I = 0x8235;\nvar RGB8 = 0x8051;\nvar SRGB8 = 0x8C41;\nvar RGB565 = 0x8D62;\nvar RGB8_SNORM = 0x8F96;\nvar R11F_G11F_B10F = 0x8C3A;\nvar RGB9_E5 = 0x8C3D;\nvar RGB16F = 0x881B;\nvar RGB32F = 0x8815;\nvar RGB8UI = 0x8D7D;\nvar RGB8I = 0x8D8F;\nvar RGB16UI = 0x8D77;\nvar RGB16I = 0x8D89;\nvar RGB32UI = 0x8D71;\nvar RGB32I = 0x8D83;\nvar RGBA8 = 0x8058;\nvar SRGB8_ALPHA8 = 0x8C43;\nvar RGBA8_SNORM = 0x8F97;\nvar RGB5_A1 = 0x8057;\nvar RGBA4 = 0x8056;\nvar RGB10_A2 = 0x8059;\nvar RGBA16F = 0x881A;\nvar RGBA32F = 0x8814;\nvar RGBA8UI = 0x8D7C;\nvar RGBA8I = 0x8D8E;\nvar RGB10_A2UI = 0x906F;\nvar RGBA16UI = 0x8D76;\nvar RGBA16I = 0x8D88;\nvar RGBA32I = 0x8D82;\nvar RGBA32UI = 0x8D70;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar DEPTH_COMPONENT24 = 0x81A6;\nvar DEPTH_COMPONENT32F = 0x8CAC;\nvar DEPTH32F_STENCIL8 = 0x8CAD;\nvar DEPTH24_STENCIL8 = 0x88F0;\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\n\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar RG = 0x8227;\nvar RG_INTEGER = 0x8228;\nvar RED = 0x1903;\nvar RED_INTEGER = 0x8D94;\nvar RGB_INTEGER = 0x8D98;\nvar RGBA_INTEGER = 0x8D99;\nvar formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  var f = formatInfo;\n  f[ALPHA] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE_ALPHA] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RED] = {\n    numColorComponents: 1\n  };\n  f[RED_INTEGER] = {\n    numColorComponents: 1\n  };\n  f[RG] = {\n    numColorComponents: 2\n  };\n  f[RG_INTEGER] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGB_INTEGER] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RGBA_INTEGER] = {\n    numColorComponents: 4\n  };\n  f[DEPTH_COMPONENT] = {\n    numColorComponents: 1\n  };\n  f[DEPTH_STENCIL] = {\n    numColorComponents: 2\n  };\n}\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to teximage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nvar textureInternalFormatInfo = {};\n{\n  // NOTE: these properties need unique names so we can let Uglify mangle the name.\n  var t = textureInternalFormatInfo; // unsized formats\n\n  t[ALPHA] = {\n    textureFormat: ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE] = {\n    textureFormat: LUMINANCE,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE_ALPHA] = {\n    textureFormat: LUMINANCE_ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2, 4, 4, 8],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[RGB] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 6, 6, 12, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGBA] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 8, 8, 16, 2, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1]\n  }; // sized formats\n\n  t[R8] = {\n    textureFormat: RED,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1],\n    type: [UNSIGNED_BYTE]\n  };\n  t[R8_SNORM] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [1],\n    type: [BYTE]\n  };\n  t[R16F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[R32F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [FLOAT]\n  };\n  t[R8UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [1],\n    type: [UNSIGNED_BYTE]\n  };\n  t[R8I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [1],\n    type: [BYTE]\n  };\n  t[R16UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [UNSIGNED_SHORT]\n  };\n  t[R16I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [SHORT]\n  };\n  t[R32UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT]\n  };\n  t[R32I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [INT]\n  };\n  t[RG8] = {\n    textureFormat: RG,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RG8_SNORM] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [2],\n    type: [BYTE]\n  };\n  t[RG16F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [8, 4],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RG32F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [FLOAT]\n  };\n  t[RG8UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RG8I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [BYTE]\n  };\n  t[RG16UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_SHORT]\n  };\n  t[RG16I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [SHORT]\n  };\n  t[RG32UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [UNSIGNED_INT]\n  };\n  t[RG32I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [INT]\n  };\n  t[RGB8] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3],\n    type: [UNSIGNED_BYTE]\n  };\n  t[SRGB8] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [3],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGB565] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGB8_SNORM] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [3],\n    type: [BYTE]\n  };\n  t[R11F_G11F_B10F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV]\n  };\n  t[RGB9_E5] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV]\n  };\n  t[RGB16F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGB32F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [12],\n    type: [FLOAT]\n  };\n  t[RGB8UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [3],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGB8I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [3],\n    type: [BYTE]\n  };\n  t[RGB16UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [6],\n    type: [UNSIGNED_SHORT]\n  };\n  t[RGB16I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [6],\n    type: [SHORT]\n  };\n  t[RGB32UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [12],\n    type: [UNSIGNED_INT]\n  };\n  t[RGB32I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [12],\n    type: [INT]\n  };\n  t[RGBA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [UNSIGNED_BYTE]\n  };\n  t[SRGB8_ALPHA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGBA8_SNORM] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [BYTE]\n  };\n  t[RGB5_A1] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2, 4],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA4] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4]\n  };\n  t[RGB10_A2] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA16F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [16, 8],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGBA32F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [16],\n    type: [FLOAT]\n  };\n  t[RGBA8UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGBA8I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [BYTE]\n  };\n  t[RGB10_A2UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA16UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [UNSIGNED_SHORT]\n  };\n  t[RGBA16I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [SHORT]\n  };\n  t[RGBA32I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [16],\n    type: [INT]\n  };\n  t[RGBA32UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [16],\n    type: [UNSIGNED_INT]\n  }; // Sized Internal\n\n  t[DEPTH_COMPONENT16] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2, 4],\n    type: [UNSIGNED_SHORT, UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT24] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT32F] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [FLOAT]\n  };\n  t[DEPTH24_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT_24_8]\n  };\n  t[DEPTH32F_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [FLOAT_32_UNSIGNED_INT_24_8_REV]\n  };\n  Object.keys(t).forEach(function (internalFormat) {\n    var info = t[internalFormat];\n    info.bytesPerElementMap = {};\n    info.bytesPerElement.forEach(function (bytesPerElement, ndx) {\n      var type = info.type[ndx];\n      info.bytesPerElementMap[type] = bytesPerElement;\n    });\n  });\n}\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\n\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  var bytesPerElement = info.bytesPerElementMap[type];\n\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n\n  return bytesPerElement;\n}\n/**\n * Info related to a specific texture internalFormat as returned\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\n *\n * @typedef {Object} TextureFormatInfo\n * @property {number} format Format to pass to texImage2D and related functions\n * @property {number} type Type to pass to texImage2D and related functions\n * @memberOf module:twgl/textures\n */\n\n/**\n * Gets the format and type for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\n * @memberOf module:twgl/textures\n */\n\n\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return {\n    format: info.textureFormat,\n    type: info.type[0]\n  };\n}\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n * @private\n */\n\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) === 0;\n}\n/**\n * Gets whether or not we can generate mips for the given\n * internal format.\n *\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\n\n\nfunction canGenerateMipmap(gl, width, height, internalFormat\n/*, type */\n) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.colorRenderable && info.textureFilterable;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\n\n\nfunction canFilter(internalFormat\n/*, type */\n) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.textureFilterable;\n}\n/**\n * Gets the number of compontents for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\n\n\nfunction getNumComponentsForFormat(format) {\n  var info = formatInfo[format];\n\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n\n  return info.numColorComponents;\n}\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n * @private\n */\n\n\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n\n  return defaultType || gl.UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n\n  if (!width && !height) {\n    var size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\n\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\n\n\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documentented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number[]|ArrayBufferView} [color] Color to initialize this texture with if loading an image asynchronously.\n *     The default use a blue 1x1 pixel texture. You can set another default by calling `twgl.setDefaults`\n *     or you can set an individual texture's initial color by setting this property. Example: `[1, .5, .5, 1]` = pink\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediatley. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then eact entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n// NOTE: While querying GL is considered slow it's not remotely as slow\n// as uploading a texture. On top of that you're unlikely to call this in\n// a perf critical loop. Even if upload a texture every frame that's unlikely\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\n// making the API easy to use outweigh any supposed perf benefits\n//\n// Also note I get that having one global of these is bad practice.\n// As long as it's used correctly it means no garbage which probably\n// doesn't matter when dealing with textures but old habits die hard.\n\n\nvar lastPackState = {};\n/**\n * Saves any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\nfunction savePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    lastPackState.colorspaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n/**\n * Restores any packing state that was set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\n\nfunction restorePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n  }\n}\n/**\n * Saves state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\n\nfunction saveSkipState(gl) {\n  lastPackState.unpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n\n  if (utils.isWebGL2(gl)) {\n    lastPackState.unpackRowLength = gl.getParameter(gl.UNPACK_ROW_LENGTH);\n    lastPackState.unpackImageHeight = gl.getParameter(gl.UNPACK_IMAGE_HEIGHT);\n    lastPackState.unpackSkipPixels = gl.getParameter(gl.UNPACK_SKIP_PIXELS);\n    lastPackState.unpackSkipRows = gl.getParameter(gl.UNPACK_SKIP_ROWS);\n    lastPackState.unpackSkipImages = gl.getParameter(gl.UNPACK_SKIP_IMAGES);\n  }\n}\n/**\n * Restores state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\n\nfunction restoreSkipState(gl) {\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, lastPackState.unpackAlignment);\n\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, lastPackState.unpackRowLength);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\n    gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, lastPackState.unpackSkipPixels);\n    gl.pixelStorei(gl.UNPACK_SKIP_ROWS, lastPackState.unpackSkipRows);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, lastPackState.unpackSkipImages);\n  }\n}\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParamteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @private\n */\n\n\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.minMag);\n  }\n\n  if (options.min) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.min);\n  }\n\n  if (options.mag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.mag);\n  }\n\n  if (options.wrap) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrap);\n\n    if (target === gl.TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrapR);\n  }\n\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrapS);\n  }\n\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrapT);\n  }\n\n  if (options.minLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_LOD, options.minLod);\n  }\n\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LOD, options.maxLod);\n  }\n\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureParameters(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n * @private\n */\n\n\nfunction createSampler(gl, options) {\n  var sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n * @private\n */\n\n\nfunction createSamplers(gl, samplerOptions) {\n  var samplers = {};\n  Object.keys(samplerOptions).forEach(function (name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n * @private\n */\n\n\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @param {number} [type] The type parameter for texImage2D etc..\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || gl.RGBA;\n  type = type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n\n  if (canGenerateMipmap(gl, width, height, internalFormat, type)) {\n    gl.generateMipmap(target);\n  } else {\n    var filtering = canFilter(internalFormat, type) ? gl.LINEAR : gl.NEAREST;\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || options.auto === undefined && options.level === undefined;\n}\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n * @private\n */\n\n\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [gl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z];\n}\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundent but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n * @private\n */\n\n\nfunction getCubeFacesWithNdx(gl, options) {\n  var faces = getCubeFaceOrder(gl, options); // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n\n  var facesWithNdx = faces.map(function (face, ndx) {\n    return {\n      face: face,\n      ndx: ndx\n    };\n  });\n  facesWithNdx.sort(function (a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\n\n\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  var level = options.level || 0;\n  var width = element.width;\n  var height = element.height;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // guess the parts\n    var imgWidth = element.width;\n    var imgHeight = element.height;\n    var size;\n    var slices;\n\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      }); // Free up the canvas memory\n\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (typeof createImageBitmap !== 'undefined') {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size; // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be unrenderable.\n\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n        createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none'\n        }).then(function (imageBitmap) {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n          }\n        });\n      });\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    var smallest = Math.min(element.width, element.height);\n    var largest = Math.max(element.width, element.height);\n    var depth = largest / smallest;\n\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n\n    var xMult = element.width === largest ? 1 : 0;\n    var yMult = element.height === largest ? 1 : 0;\n    saveSkipState(gl);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n\n    for (var d = 0; d < depth; ++d) {\n      var srcX = d * smallest * xMult;\n      var srcY = d * smallest * yMult;\n      gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(gl.UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n\n    restoreSkipState(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n\n  restorePackState(gl, options);\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {}\n/**\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\n * @param {string} url url to image\n * @returns {boolean} true if the window's origin is the same as image's url\n * @private\n */\n\n\nfunction urlIsSameOrigin(url) {\n  if (typeof document !== 'undefined') {\n    // for IE really\n    var a = document.createElement('a');\n    a.href = url;\n    return a.hostname === location.hostname && a.port === location.port && a.protocol === location.protocol;\n  } else {\n    var localOrigin = new URL(location.href).origin;\n    var urlOrigin = new URL(url, location.href).origin;\n    return urlOrigin === localOrigin;\n  }\n}\n\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\n  return crossOrigin === undefined && !urlIsSameOrigin(url) ? 'anonymous' : crossOrigin;\n}\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n * @private\n */\n\n\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  var img;\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\n\n  if (typeof Image !== 'undefined') {\n    img = new Image();\n\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    var clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError); // eslint-disable-line\n\n      img.removeEventListener('load', onLoad); // eslint-disable-line\n\n      img = null;\n    };\n\n    var onError = function onError() {\n      var msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    var onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (typeof ImageBitmap !== 'undefined') {\n    var err;\n    var bm;\n\n    var cb = function cb() {\n      callback(err, bm);\n    };\n\n    var options = {};\n\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n\n    fetch(url, options).then(function (response) {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.blob();\n    }).then(function (blob) {\n      return createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none'\n      });\n    }).then(function (bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function (e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n\n  return img;\n}\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n * @private\n */\n\n\nfunction isTexImageSource(obj) {\n  return typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap || typeof ImageData !== 'undefined' && obj instanceof ImageData || typeof HTMLElement !== 'undefined' && obj instanceof HTMLElement;\n}\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @private\n */\n\n\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function () {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n\n  if (options.color === false) {\n    return;\n  } // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n\n\n  var color = make1Pixel(options.color);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  }\n}\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} souce image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as approriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var img = loadAndUseImage(options.src, options.crossOrigin, function (err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n\n  if (target !== gl.TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = 6;\n  var errors = [];\n  var faces = getCubeFaceOrder(gl, options);\n  var imgs; // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex); // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function (otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D_ARRAY;\n\n  if (target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = urls.length;\n  var errors = [];\n  var imgs; // eslint-disable-line\n\n  var level = options.level || 0;\n  var width = options.width;\n  var height = options.height;\n  var depth = urls.length;\n  var firstImage = true;\n\n  function uploadImg(slice) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        savePackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null); // put it in every slice otherwise some slices will be 0,0,0,0\n\n          for (var s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          var src = img;\n\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src); // free the canvas memory\n\n          if (src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        restorePackState(gl, options);\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var width = options.width;\n  var height = options.height;\n  var depth = options.depth;\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n\n  if (!isArrayBuffer(src)) {\n    var Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  var bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  var numElements = src.byteLength / bytesPerElement; // TODO: check UNPACK_ALIGNMENT?\n\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n\n  var dimensions;\n\n  if (target === gl.TEXTURE_3D) {\n    if (!width && !height && !depth) {\n      var size = Math.cbrt(numElements);\n\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n\n  saveSkipState(gl);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    var elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    var faceSize = numElements / 6 * elementsPerElement;\n    getCubeFacesWithNdx(gl, options).forEach(function (f) {\n      var offset = faceSize * f.ndx;\n      var data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n\n  restorePackState(gl, options);\n  restoreSkipState(gl);\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type\n  };\n}\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setEmptyTexture(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n\n  restorePackState(gl, options);\n}\n/**\n * Creates a texture based on the options passed in.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  var tex = gl.createTexture();\n  var target = options.target || gl.TEXTURE_2D;\n  var width = options.width || 1;\n  var height = options.height || 1;\n  var internalFormat = options.internalFormat || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var type = options.type || formatType.type;\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // this should have been the default for CUBEMAPS :(\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  var src = options.src;\n\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n\n    if (typeof src === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) || Array.isArray(src) && (typeof src[0] === 'number' || Array.isArray(src[0]) || isArrayBuffer(src[0]))) {\n      var dimensions = setTextureFromArray(gl, tex, src, options);\n      width = dimensions.width;\n      height = dimensions.height;\n      type = dimensions.type;\n    } else if (Array.isArray(src) && (typeof src[0] === 'string' || isTexImageSource(src[0]))) {\n      if (target === gl.TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else if (isTexImageSource(src)) {\n      setTextureFromElement(gl, tex, src, options);\n      width = src.width;\n      height = src.height;\n    } else {\n      throw \"unsupported src type\";\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @memberOf module:twgl/textures\n */\n\n\nfunction resizeTexture(gl, tex, options, width, height) {\n  width = width || options.width;\n  height = height || options.height;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type;\n  var src = options.src;\n\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || Array.isArray(src) && typeof src[0] === 'number') {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n * @private\n */\n\n\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' || Array.isArray(src) && typeof src[0] === 'string';\n}\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  var numDownloading = 0;\n  var errors = [];\n  var textures = {};\n  var images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function () {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function (name) {\n    var options = textureOptions[name];\n    var onLoadFn;\n\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function onLoadFn(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n\n        if (err) {\n          errors.push(err);\n        }\n\n        callCallbackIfReady();\n      };\n\n      ++numDownloading;\n    }\n\n    textures[name] = createTexture(gl, options, onLoadFn);\n  }); // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n\n  callCallbackIfReady();\n  return textures;\n} // Using quotes prevents Uglify from changing the names.\n// No speed diff AFAICT.\n\n/***/ }),\n\n/***/ \"./src/twgl-full.js\":\n/*!**************************!*\\\n  !*** ./src/twgl-full.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  m4: true,\n  v3: true,\n  primitives: true\n};\nexports.primitives = exports.v3 = exports.m4 = void 0;\n\nvar m4 = _interopRequireWildcard(__webpack_require__(/*! ./m4.js */ \"./src/m4.js\"));\n\nexports.m4 = m4;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(/*! ./v3.js */ \"./src/v3.js\"));\n\nexports.v3 = v3;\n\nvar primitives = _interopRequireWildcard(__webpack_require__(/*! ./primitives.js */ \"./src/primitives.js\"));\n\nexports.primitives = primitives;\n\nvar _twgl = __webpack_require__(/*! ./twgl.js */ \"./src/twgl.js\");\n\nObject.keys(_twgl).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _twgl[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n\n/***/ \"./src/twgl.js\":\n/*!*********************!*\\\n  !*** ./src/twgl.js ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  addExtensionsToContext: true,\n  getContext: true,\n  getWebGLContext: true,\n  resizeCanvasToDisplaySize: true,\n  setDefaults: true\n};\nexports.addExtensionsToContext = addExtensionsToContext;\nexports.getContext = getContext;\nexports.getWebGLContext = getWebGLContext;\nexports.resizeCanvasToDisplaySize = resizeCanvasToDisplaySize;\nexports.setDefaults = setDefaults;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(/*! ./attributes.js */ \"./src/attributes.js\"));\n\nObject.keys(attributes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = attributes[key];\n});\n\nvar textures = _interopRequireWildcard(__webpack_require__(/*! ./textures.js */ \"./src/textures.js\"));\n\nObject.keys(textures).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = textures[key];\n});\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nvar utils = _interopRequireWildcard(__webpack_require__(/*! ./utils.js */ \"./src/utils.js\"));\n\nObject.keys(utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = utils[key];\n});\n\nvar _draw = __webpack_require__(/*! ./draw.js */ \"./src/draw.js\");\n\nObject.keys(_draw).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _draw[key];\n});\n\nvar _framebuffers = __webpack_require__(/*! ./framebuffers.js */ \"./src/framebuffers.js\");\n\nObject.keys(_framebuffers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _framebuffers[key];\n});\n\nvar _programs = __webpack_require__(/*! ./programs.js */ \"./src/programs.js\");\n\nObject.keys(_programs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _programs[key];\n});\n\nvar _typedarrays = __webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\");\n\nObject.keys(_typedarrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _typedarrays[key];\n});\n\nvar _vertexArrays = __webpack_require__(/*! ./vertex-arrays.js */ \"./src/vertex-arrays.js\");\n\nObject.keys(_vertexArrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _vertexArrays[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  addExtensionsToContext: true\n};\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} [attribPrefix] The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n *   In otherwords I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} [crossOrigin]\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} [addExtensionsToContext]\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults); // eslint-disable-line\n\n  textures.setTextureDefaults_(newDefaults); // eslint-disable-line\n}\n\nvar prefixRE = /^(.*?)_/;\n\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  var ext = gl.getExtension(extensionName);\n\n  if (ext) {\n    var enums = {};\n    var fnSuffix = prefixRE.exec(extensionName)[1];\n    var enumSuffix = '_' + fnSuffix;\n\n    for (var key in ext) {\n      var value = ext[key];\n      var isFunc = typeof value === 'function';\n      var suffix = isFunc ? fnSuffix : enumSuffix;\n      var name = key; // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function (origFn) {\n            return function () {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    } // pass the modified enums to glEnumToString\n\n\n    enums.constructor = {\n      name: ext.constructor.name\n    };\n    utils.glEnumToString(enums, 0);\n  }\n\n  return ext;\n}\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\n\n\nvar supportedExtensions = ['ANGLE_instanced_arrays', 'EXT_blend_minmax', 'EXT_color_buffer_float', 'EXT_color_buffer_half_float', 'EXT_disjoint_timer_query', 'EXT_disjoint_timer_query_webgl2', 'EXT_frag_depth', 'EXT_sRGB', 'EXT_shader_texture_lod', 'EXT_texture_filter_anisotropic', 'OES_element_index_uint', 'OES_standard_derivatives', 'OES_texture_float', 'OES_texture_float_linear', 'OES_texture_half_float', 'OES_texture_half_float_linear', 'OES_vertex_array_object', 'WEBGL_color_buffer_float', 'WEBGL_compressed_texture_atc', 'WEBGL_compressed_texture_etc1', 'WEBGL_compressed_texture_pvrtc', 'WEBGL_compressed_texture_s3tc', 'WEBGL_compressed_texture_s3tc_srgb', 'WEBGL_depth_texture', 'WEBGL_draw_buffers'];\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existance of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\n\nfunction addExtensionsToContext(gl) {\n  for (var ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n * @private\n */\n\n\nfunction create3DContext(canvas, opt_attribs) {\n  var names = [\"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getWebGLContext(canvas, opt_attribs) {\n  var gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction createContext(canvas, opt_attribs) {\n  var names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getContext(canvas, opt_attribs) {\n  var gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\n\n\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  var width = canvas.clientWidth * multiplier | 0;\n  var height = canvas.clientHeight * multiplier | 0;\n\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n\n  return false;\n}\n\n/***/ }),\n\n/***/ \"./src/typedarrays.js\":\n/*!****************************!*\\\n  !*** ./src/typedarrays.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getGLTypeForTypedArray = getGLTypeForTypedArray;\nexports.getGLTypeForTypedArrayType = getGLTypeForTypedArrayType;\nexports.getTypedArrayTypeForGLType = getTypedArrayTypeForGLType;\nexports.isArrayBuffer = void 0;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar glTypeToTypedArray = {};\n{\n  var tt = glTypeToTypedArray;\n  tt[BYTE] = Int8Array;\n  tt[UNSIGNED_BYTE] = Uint8Array;\n  tt[SHORT] = Int16Array;\n  tt[UNSIGNED_SHORT] = Uint16Array;\n  tt[INT] = Int32Array;\n  tt[UNSIGNED_INT] = Uint32Array;\n  tt[FLOAT] = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\n  tt[HALF_FLOAT] = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8] = Uint32Array;\n}\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getTypedArrayTypeForGLType(type) {\n  var CTOR = glTypeToTypedArray[type];\n\n  if (!CTOR) {\n    throw \"unknown gl type\";\n  }\n\n  return CTOR;\n}\n\nvar isArrayBuffer = typeof SharedArrayBuffer !== 'undefined' ? function isArrayBufferOrSharedArrayBuffer(a) {\n  return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n} : function isArrayBuffer(a) {\n  return a && a.buffer && a.buffer instanceof ArrayBuffer;\n};\nexports.isArrayBuffer = isArrayBuffer;\n\n/***/ }),\n\n/***/ \"./src/utils.js\":\n/*!**********************!*\\\n  !*** ./src/utils.js ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.isWebGL1 = isWebGL1;\nexports.isWebGL2 = isWebGL2;\nexports.glEnumToString = void 0;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\n\n\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\n\n\nvar glEnumToString = function () {\n  var haveEnumsForType = {};\n  var enums = {};\n\n  function addEnums(gl) {\n    var type = gl.constructor.name;\n\n    if (!haveEnumsForType[type]) {\n      for (var key in gl) {\n        if (typeof gl[key] === 'number') {\n          var existing = enums[gl[key]];\n          enums[gl[key]] = existing ? \"\".concat(existing, \" | \").concat(key) : key;\n        }\n      }\n\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || \"0x\" + value.toString(16);\n  };\n}();\n\nexports.glEnumToString = glEnumToString;\n\n/***/ }),\n\n/***/ \"./src/v3.js\":\n/*!*******************!*\\\n  !*** ./src/v3.js ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.add = add;\nexports.copy = copy;\nexports.create = create;\nexports.cross = cross;\nexports.distance = distance;\nexports.distanceSq = distanceSq;\nexports.divide = divide;\nexports.divScalar = divScalar;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.lerpV = lerpV;\nexports.length = length;\nexports.lengthSq = lengthSq;\nexports.max = max;\nexports.min = min;\nexports.mulScalar = mulScalar;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.normalize = normalize;\nexports.setDefaultType = setDefaultType;\nexports.subtract = subtract;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v3 = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\nvar VecType = Float32Array;\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n * @memberOf module:twgl/v3\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction create(x, y, z) {\n  var dst = new VecType(3);\n\n  if (x) {\n    dst[0] = x;\n  }\n\n  if (y) {\n    dst[1] = y;\n  }\n\n  if (z) {\n    dst[2] = z;\n  }\n\n  return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  return dst;\n}\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerpV(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n  return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction max(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n  return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction min(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n  return dst;\n}\n/**\n * Mutiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  return dst;\n}\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  return dst;\n}\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector a cross b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n  var t1 = a[2] * b[0] - a[0] * b[2];\n  var t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n  return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distance(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distanceSq(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n  var lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  var len = Math.sqrt(lenSq);\n\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  return dst;\n}\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  return dst;\n}\n\n/***/ }),\n\n/***/ \"./src/vertex-arrays.js\":\n/*!******************************!*\\\n  !*** ./src/vertex-arrays.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createVertexArrayInfo = createVertexArrayInfo;\nexports.createVAOAndSetAttributes = createVAOAndSetAttributes;\nexports.createVAOFromBufferInfo = createVAOFromBufferInfo;\n\nvar programs = _interopRequireWildcard(__webpack_require__(/*! ./programs.js */ \"./src/programs.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n\n  programInfos.forEach(function (programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao\n  };\n}\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n\n  if (indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n  } // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n\n\n  gl.bindVertexArray(null);\n  return vao;\n}\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=twgl-full.js.map","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","/**\r\n * kd-tree\r\n * Straight from https://github.com/ubilabs/kd-tree-javascript\r\n * Changed from UMD (CommonJS) module to ES\r\n */\r\n\r\nfunction Node(obj, dimension, parent) {\r\n    this.obj = obj;\r\n    this.left = null;\r\n    this.right = null;\r\n    this.parent = parent;\r\n    this.dimension = dimension;\r\n}\r\n\r\nexport default function/* kdTree*/(points, metric, dimensions) {\r\n\r\n    var self = this;\r\n\r\n    function buildTree(points, depth, parent) {\r\n        var dim = depth % dimensions.length,\r\n            median,\r\n            node;\r\n\r\n        if (points.length === 0) {\r\n            return null;\r\n        }\r\n        if (points.length === 1) {\r\n            return new Node(points[0], dim, parent);\r\n        }\r\n\r\n        points.sort(function (a, b) {\r\n            return a[dimensions[dim]] - b[dimensions[dim]];\r\n        });\r\n\r\n        median = Math.floor(points.length / 2);\r\n        node = new Node(points[median], dim, parent);\r\n        node.left = buildTree(points.slice(0, median), depth + 1, node);\r\n        node.right = buildTree(points.slice(median + 1), depth + 1, node);\r\n\r\n        return node;\r\n    }\r\n\r\n    // Reloads a serialied tree\r\n    function loadTree (data) {\r\n        // Just need to restore the `parent` parameter\r\n        self.root = data;\r\n\r\n        function restoreParent (root) {\r\n            if (root.left) {\r\n                root.left.parent = root;\r\n                restoreParent(root.left);\r\n            }\r\n\r\n            if (root.right) {\r\n                root.right.parent = root;\r\n                restoreParent(root.right);\r\n            }\r\n        }\r\n\r\n        restoreParent(self.root);\r\n    }\r\n\r\n    // If points is not an array, assume we're loading a pre-built tree\r\n    if (!Array.isArray(points)) loadTree(points, metric, dimensions);\r\n    else this.root = buildTree(points, 0, null);\r\n\r\n    // Convert to a JSON serializable structure; this just requires removing\r\n    // the `parent` property\r\n    this.toJSON = function (src) {\r\n        if (!src) src = this.root;\r\n        var dest = new Node(src.obj, src.dimension, null);\r\n        if (src.left) dest.left = self.toJSON(src.left);\r\n        if (src.right) dest.right = self.toJSON(src.right);\r\n        return dest;\r\n    };\r\n\r\n    this.insert = function (point) {\r\n        function innerSearch(node, parent) {\r\n\r\n            if (node === null) {\r\n                return parent;\r\n            }\r\n\r\n            var dimension = dimensions[node.dimension];\r\n            if (point[dimension] < node.obj[dimension]) {\r\n                return innerSearch(node.left, node);\r\n            } else {\r\n                return innerSearch(node.right, node);\r\n            }\r\n        }\r\n\r\n        var insertPosition = innerSearch(this.root, null),\r\n            newNode,\r\n            dimension;\r\n\r\n        if (insertPosition === null) {\r\n            this.root = new Node(point, 0, null);\r\n            return;\r\n        }\r\n\r\n        newNode = new Node(point, (insertPosition.dimension + 1) % dimensions.length, insertPosition);\r\n        dimension = dimensions[insertPosition.dimension];\r\n\r\n        if (point[dimension] < insertPosition.obj[dimension]) {\r\n            insertPosition.left = newNode;\r\n        } else {\r\n            insertPosition.right = newNode;\r\n        }\r\n    };\r\n\r\n    this.remove = function (point) {\r\n        var node;\r\n\r\n        function nodeSearch(node) {\r\n            if (node === null) {\r\n                return null;\r\n            }\r\n\r\n            if (node.obj === point) {\r\n                return node;\r\n            }\r\n\r\n            var dimension = dimensions[node.dimension];\r\n\r\n            if (point[dimension] < node.obj[dimension]) {\r\n                return nodeSearch(node.left, node);\r\n            } else {\r\n                return nodeSearch(node.right, node);\r\n            }\r\n        }\r\n\r\n        function removeNode(node) {\r\n            var nextNode,\r\n                nextObj,\r\n                pDimension;\r\n\r\n            function findMin(node, dim) {\r\n                var dimension,\r\n                    own,\r\n                    left,\r\n                    right,\r\n                    min;\r\n\r\n                if (node === null) {\r\n                    return null;\r\n                }\r\n\r\n                dimension = dimensions[dim];\r\n\r\n                if (node.dimension === dim) {\r\n                    if (node.left !== null) {\r\n                        return findMin(node.left, dim);\r\n                    }\r\n                    return node;\r\n                }\r\n\r\n                own = node.obj[dimension];\r\n                left = findMin(node.left, dim);\r\n                right = findMin(node.right, dim);\r\n                min = node;\r\n\r\n                if (left !== null && left.obj[dimension] < own) {\r\n                    min = left;\r\n                }\r\n                if (right !== null && right.obj[dimension] < min.obj[dimension]) {\r\n                    min = right;\r\n                }\r\n                return min;\r\n            }\r\n\r\n            if (node.left === null && node.right === null) {\r\n                if (node.parent === null) {\r\n                    self.root = null;\r\n                    return;\r\n                }\r\n\r\n                pDimension = dimensions[node.parent.dimension];\r\n\r\n                if (node.obj[pDimension] < node.parent.obj[pDimension]) {\r\n                    node.parent.left = null;\r\n                } else {\r\n                    node.parent.right = null;\r\n                }\r\n                return;\r\n            }\r\n\r\n            // If the right subtree is not empty, swap with the minimum element on the\r\n            // node's dimension. If it is empty, we swap the left and right subtrees and\r\n            // do the same.\r\n            if (node.right !== null) {\r\n                nextNode = findMin(node.right, node.dimension);\r\n                nextObj = nextNode.obj;\r\n                removeNode(nextNode);\r\n                node.obj = nextObj;\r\n            } else {\r\n                nextNode = findMin(node.left, node.dimension);\r\n                nextObj = nextNode.obj;\r\n                removeNode(nextNode);\r\n                node.right = node.left;\r\n                node.left = null;\r\n                node.obj = nextObj;\r\n            }\r\n\r\n        }\r\n\r\n        node = nodeSearch(self.root);\r\n\r\n        if (node === null) { return; }\r\n\r\n        removeNode(node);\r\n    };\r\n\r\n    this.nearest = function (point, maxNodes, maxDistance) {\r\n        var i,\r\n            result,\r\n            bestNodes;\r\n\r\n        bestNodes = new BinaryHeap(\r\n            function (e) { return -e[1]; }\r\n        );\r\n\r\n        function nearestSearch(node) {\r\n            var bestChild,\r\n                dimension = dimensions[node.dimension],\r\n                ownDistance = metric(point, node.obj),\r\n                linearPoint = {},\r\n                linearDistance,\r\n                otherChild,\r\n                i;\r\n\r\n            function saveNode(node, distance) {\r\n                bestNodes.push([node, distance]);\r\n                if (bestNodes.size() > maxNodes) {\r\n                    bestNodes.pop();\r\n                }\r\n            }\r\n\r\n            for (i = 0; i < dimensions.length; i += 1) {\r\n                if (i === node.dimension) {\r\n                    linearPoint[dimensions[i]] = point[dimensions[i]];\r\n                } else {\r\n                    linearPoint[dimensions[i]] = node.obj[dimensions[i]];\r\n                }\r\n            }\r\n\r\n            linearDistance = metric(linearPoint, node.obj);\r\n\r\n            if (node.right === null && node.left === null) {\r\n                if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\r\n                    saveNode(node, ownDistance);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (node.right === null) {\r\n                bestChild = node.left;\r\n            } else if (node.left === null) {\r\n                bestChild = node.right;\r\n            } else {\r\n                if (point[dimension] < node.obj[dimension]) {\r\n                    bestChild = node.left;\r\n                } else {\r\n                    bestChild = node.right;\r\n                }\r\n            }\r\n\r\n            nearestSearch(bestChild);\r\n\r\n            if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\r\n                saveNode(node, ownDistance);\r\n            }\r\n\r\n            if (bestNodes.size() < maxNodes || Math.abs(linearDistance) < bestNodes.peek()[1]) {\r\n                if (bestChild === node.left) {\r\n                    otherChild = node.right;\r\n                } else {\r\n                    otherChild = node.left;\r\n                }\r\n                if (otherChild !== null) {\r\n                    nearestSearch(otherChild);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (maxDistance) {\r\n            for (i = 0; i < maxNodes; i += 1) {\r\n                bestNodes.push([null, maxDistance]);\r\n            }\r\n        }\r\n\r\n        if(self.root)\r\n            nearestSearch(self.root);\r\n\r\n        result = [];\r\n\r\n        for (i = 0; i < Math.min(maxNodes, bestNodes.content.length); i += 1) {\r\n            if (bestNodes.content[i][0]) {\r\n                result.push([bestNodes.content[i][0].obj, bestNodes.content[i][1]]);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    this.balanceFactor = function () {\r\n        function height(node) {\r\n            if (node === null) {\r\n                return 0;\r\n            }\r\n            return Math.max(height(node.left), height(node.right)) + 1;\r\n        }\r\n\r\n        function count(node) {\r\n            if (node === null) {\r\n                return 0;\r\n            }\r\n            return count(node.left) + count(node.right) + 1;\r\n        }\r\n\r\n        return height(self.root) / (Math.log(count(self.root)) / Math.log(2));\r\n    };\r\n}\r\n\r\n// Binary heap implementation from:\r\n// http://eloquentjavascript.net/appendix2.html\r\n\r\nfunction BinaryHeap(scoreFunction){\r\n    this.content = [];\r\n    this.scoreFunction = scoreFunction;\r\n}\r\n\r\nBinaryHeap.prototype = {\r\n    push: function(element) {\r\n        // Add the new element to the end of the array.\r\n        this.content.push(element);\r\n        // Allow it to bubble up.\r\n        this.bubbleUp(this.content.length - 1);\r\n    },\r\n\r\n    pop: function() {\r\n        // Store the first element so we can return it later.\r\n        var result = this.content[0];\r\n        // Get the element at the end of the array.\r\n        var end = this.content.pop();\r\n        // If there are any elements left, put the end element at the\r\n        // start, and let it sink down.\r\n        if (this.content.length > 0) {\r\n            this.content[0] = end;\r\n            this.sinkDown(0);\r\n        }\r\n        return result;\r\n    },\r\n\r\n    peek: function() {\r\n        return this.content[0];\r\n    },\r\n\r\n    remove: function(node) {\r\n        var len = this.content.length;\r\n        // To remove a value, we must search through the array to find\r\n        // it.\r\n        for (var i = 0; i < len; i++) {\r\n            if (this.content[i] == node) {\r\n                // When it is found, the process seen in 'pop' is repeated\r\n                // to fill up the hole.\r\n                var end = this.content.pop();\r\n                if (i != len - 1) {\r\n                    this.content[i] = end;\r\n                    if (this.scoreFunction(end) < this.scoreFunction(node))\r\n                        this.bubbleUp(i);\r\n                    else\r\n                        this.sinkDown(i);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        throw new Error(\"Node not found.\");\r\n    },\r\n\r\n    size: function() {\r\n        return this.content.length;\r\n    },\r\n\r\n    bubbleUp: function(n) {\r\n        // Fetch the element that has to be moved.\r\n        var element = this.content[n];\r\n        // When at 0, an element can not go up any further.\r\n        while (n > 0) {\r\n            // Compute the parent element's index, and fetch it.\r\n            var parentN = Math.floor((n + 1) / 2) - 1,\r\n                parent = this.content[parentN];\r\n            // Swap the elements if the parent is greater.\r\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\r\n                this.content[parentN] = element;\r\n                this.content[n] = parent;\r\n                // Update 'n' to continue at the new position.\r\n                n = parentN;\r\n            }\r\n            // Found a parent that is less, no need to move it further.\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    },\r\n\r\n    sinkDown: function(n) {\r\n        // Look up the target element and its score.\r\n        var length = this.content.length,\r\n            element = this.content[n],\r\n            elemScore = this.scoreFunction(element);\r\n\r\n        while(true) {\r\n            // Compute the indices of the child elements.\r\n            var child2N = (n + 1) * 2, child1N = child2N - 1;\r\n            // This is used to store the new position of the element,\r\n            // if any.\r\n            var swap = null;\r\n            // If the first child exists (is inside the array)...\r\n            if (child1N < length) {\r\n                // Look it up and compute its score.\r\n                var child1 = this.content[child1N],\r\n                    child1Score = this.scoreFunction(child1);\r\n                // If the score is less than our element's, we need to swap.\r\n                if (child1Score < elemScore)\r\n                    swap = child1N;\r\n            }\r\n            // Do the same checks for the other child.\r\n            if (child2N < length) {\r\n                var child2 = this.content[child2N],\r\n                    child2Score = this.scoreFunction(child2);\r\n                if (child2Score < (swap == null ? elemScore : child1Score)){\r\n                    swap = child2N;\r\n                }\r\n            }\r\n\r\n            // If the element needs to be moved, swap it, and continue.\r\n            if (swap != null) {\r\n                this.content[n] = this.content[swap];\r\n                this.content[swap] = element;\r\n                n = swap;\r\n            }\r\n            // Otherwise, we are done.\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\nexports.RANDOM = exports.ARRAY_TYPE = exports.EPSILON = void 0;\n\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nexports.EPSILON = EPSILON;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexports.ARRAY_TYPE = ARRAY_TYPE;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexports.RANDOM = RANDOM;\n\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromQuat2 = fromQuat2;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\n\nfunction fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\n\nfunction getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;","\r\nimport twgl from 'twgl.js/dist/4.x/twgl-full.js';\r\nimport mat4 from 'gl-matrix/cjs/mat4.js';\r\n\r\nexport default function Axes(gl, settings) {\r\n    let scale = settings.axesScale;\r\n    this.model = mat4.create();\r\n    mat4.fromScaling(this.model, [scale, scale, scale]);\r\n    this.projection = settings.projection;\r\n}\r\n\r\nAxes.prototype.draw = function (gl, viewMatrix) {\r\n    let worldView = mat4.create();\r\n    mat4.multiply(worldView, viewMatrix, this.model);\r\n\r\n    const program_a = twgl.createProgramInfo(gl, ['vs-a', 'fs-a']);\r\n\r\n    gl.useProgram(program_a.program);\r\n    twgl.setUniforms(program_a, {\r\n        u_worldView: worldView,\r\n        u_projection: this.projection,\r\n    });\r\n\r\n    twgl.setBuffersAndAttributes(gl, program_a, twgl.createBufferInfoFromArrays(gl, this.axesVerts));\r\n    gl.drawArrays(gl.LINES, 0, 6);\r\n\r\n    // there must be an easier way to achieve this, I know...\r\n    twgl.setBuffersAndAttributes(gl, program_a, twgl.createBufferInfoFromArrays(gl, this.axesDots));\r\n\r\n    gl.drawArrays(gl.POINTS, 0, 3);\r\n};\r\n\r\nAxes.prototype.axesVerts = {\r\n    position: [-1, 0, 0, 1, 0, 0,\r\n        0, -1, 0, 0, 1, 0,\r\n        0, 0, -1, 0, 0, 1],\r\n    color: [0.860, 0.207, 0.270, 1, 0.860, 0.207, 0.270, 1, // #dc3545, red\r\n        0.156, 0.652, 0.270, 1, 0.156, 0.652, 0.270, 1,     // #28a745, green\r\n        0, 0.480, 1, 1, 0, 0.480, 1, 1]                     // #007bff, blue\r\n};\r\n\r\nAxes.prototype.axesDots = {\r\n    position: [ 1, 0, 0,\r\n        0, 1, 0,\r\n        0, 0, 1],\r\n    color: [0.860, 0.207, 0.270, 1,\r\n        0.156, 0.652, 0.270, 1,\r\n        0, 0.480, 1, 1]\r\n};\r\n","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","\r\nimport * as mat3 from 'gl-matrix/esm/mat3';\r\nimport * as mat4 from 'gl-matrix/esm/mat4';\r\nimport * as vec3 from 'gl-matrix/esm/vec3';\r\nimport * as quat from 'gl-matrix/esm/quat';\r\n\r\nexport default function Bird(position, course, settings, birdSettings) {\r\n\r\n    this.programInfo = settings.program;\r\n    this.bufferInfo = birdSettings.verts;\r\n    this.position = position;\r\n    this.course = course;       // or: speed\r\n    this.acceleration = vec3.create();\r\n    this.uniforms = {\r\n        u_normal: mat3.create(),\r\n        u_worldView: mat4.create(),\r\n        u_projection: settings.projection,\r\n//        u_projection: mat4.create(),\r\n//        u_modelViewProjection: mat4.create(),\r\n        u_color: birdSettings.color,\r\n        u_reverseLightDirection: settings.revLightDir,\r\n        u_ambientColor: settings.ambientColor,\r\n        u_fogColor: settings.backgroundColor\r\n    };\r\n    this.model = mat4.create();\r\n    this.perching = 0;\r\n    this.birdSettings = birdSettings;\r\n\r\n}\r\n\r\n// calculate u_model and u_normal from position and course\r\nBird.prototype.updateModel = function()\r\n{\r\n    let normCourse = vec3.create();\r\n    vec3.normalize(normCourse, this.course);\r\n    let q = quat.create();\r\n    quat.rotationTo(q, this.birdSettings.face, normCourse);\r\n\r\n    /*\r\n            let right = vec3.create();\r\n            vec3.cross(right, normCourse, up);\r\n\r\n            let desiredUp = vec3.create();\r\n            vec3.cross(desiredUp, right, normCourse);\r\n\r\n            let newUp = vec3.create();\r\n            vec3.transformQuat(newUp, up, q);\r\n\r\n            let q2 = quat.create();\r\n            quat.rotationTo(q2, newUp, desiredUp);\r\n\r\n            quat.multiply(q, q2, q);\r\n    */\r\n\r\n    mat4.fromRotationTranslationScale(this.model,\r\n        q,\r\n        this.position,\r\n        this.birdSettings.scale);\r\n    mat3.normalFromMat4(this.uniforms.u_normal, this.model);\r\n    return this;\r\n};\r\n\r\n// calculate new position from course, update u_model and u_normal\r\nBird.prototype.update = function(delta)\r\n{\r\n    let move = vec3.create();\r\n    vec3.scale(move, this.course, delta);\r\n    vec3.add(this.position, this.position, move);\r\n    return this.updateModel();\r\n};\r\n\r\n// calculate view-projection\r\nBird.prototype.project = function(viewProjection) {\r\n    mat4.multiply(this.uniforms.u_worldView, viewProjection, this.model);\r\n//    mat4.multiply(this.uniforms.u_modelViewProjection, viewProjection, this.model);\r\n    return this;\r\n};\r\n\r\n/*\r\nBird.prototype.fog = function(near, far)\r\n{\r\n    this.uniforms.u_fogNear = near;\r\n    this.uniforms.u_fogFar = far;\r\n    return this;\r\n};\r\n*/\r\n\r\nBird.prototype.sees = function(other, visionAngle)\r\n{\r\n    if (this === other) return false;   // Bird can't see itself\r\n    let d = vec3.create();\r\n    vec3.subtract(d, other.position, this.position);\r\n    let angle = vec3.angle(d, this.course);   // 0 ... PI, >= 0\r\n    return angle <= visionAngle;\r\n};\r\n\r\n// seek, or steer to\r\nBird.prototype.seek = function (to, strength) {\r\n    let diff = vec3.create();\r\n    vec3.subtract(diff, to, this.position);\r\n    vec3.normalize(diff, diff);\r\n    vec3.scale(diff, diff, strength);\r\n    vec3.add(this.acceleration, this.acceleration, diff);\r\n    return this;\r\n};\r\n\r\nBird.prototype.flee = function (from, strength) {\r\n    let diff = vec3.create();\r\n    vec3.subtract(diff, this.position, from);\r\n    vec3.normalize(diff, diff);\r\n    vec3.scale(diff, diff, strength);\r\n    vec3.add(this.acceleration, this.acceleration, diff);\r\n    return this;\r\n};\r\n\r\nBird.prototype.root = function (rootStrength) {\r\n    if (!this.perching) {\r\n        let dist2 = vec3.squaredLength(this.position);\r\n        if (dist2 >= this.birdSettings.limit2) {\r\n            let target = vec3.create();\r\n            vec3.random(target, this.birdSettings.limit / 1.5);\r\n            //               boidRandom(target, options.limit / 1.5);      // 1.5 is arbitrary\r\n            this.seek(target, rootStrength);\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\nBird.prototype.noise = function (level) {\r\n    if (!this.perching) {\r\n        if (level > 0 && Math.random() < level) {\r\n            let rnd = vec3.create();\r\n            vec3.random(rnd, level);\r\n            vec3.add(this.acceleration, this.acceleration, rnd);\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\nBird.prototype.boundVec = function(v, level)    {\r\n    let curLevel = vec3.length(v);\r\n    if (curLevel > level)   {\r\n        vec3.scale(v, v, level / curLevel);\r\n    }\r\n    return v;\r\n};\r\n\r\nBird.prototype.bounds = function (maxAccel, maxSpeed) {\r\n    if (!this.perching) {\r\n        this.acceleration = this.boundVec(this.acceleration, maxAccel);\r\n        vec3.add(this.course, this.course, this.acceleration);\r\n        this.course = this.boundVec(this.course, maxSpeed);\r\n    }\r\n    return this;\r\n};\r\n\r\n// avoid collisions with neighbours\r\nBird.prototype.separate = function (neighbours, distance, strength = 1) {     // neighbours.length > 0\r\n    let accu = vec3.create();\r\n    neighbours.reduce((acc, v) => {\r\n        let other = v[0], dist = v[1];\r\n        if (dist < distance) {  // dist always > 0\r\n            let diff = vec3.create();\r\n            vec3.subtract(diff, other.position, this.position);\r\n            vec3.scale(diff, diff, 1 / dist);   // weigh by distance\r\n            return vec3.add(acc, acc, diff);\r\n        }\r\n        else return acc;\r\n    }, accu);\r\n    vec3.scale(accu, accu, strength / neighbours.length);\r\n    vec3.add(this.acceleration, this.acceleration, accu);\r\n    return this;\r\n};\r\n\r\n// let course approach average course of neighbours\r\nBird.prototype.align = function(neighbours, strength = 1) {     // neighbours.length > 0\r\n    let accu = vec3.create();\r\n    neighbours.reduce((acc, v) => {\r\n        return vec3.add(acc, acc, v[0].course);\r\n    }, accu);\r\n    vec3.scale(accu, accu, strength / neighbours.length);\r\n    vec3.add(this.acceleration, this.acceleration, accu);\r\n    return this;\r\n};\r\n\r\n// steer to average position of neighbours\r\nBird.prototype.cohese = function(neighbours, strength) {     // neighbours.length > 0\r\n    let accu = vec3.create();\r\n    neighbours.reduce((acc, v) => {\r\n        return vec3.add(acc, acc, v[0].position);\r\n    }, accu);\r\n    vec3.scale(accu, accu, 1 / neighbours.length);\r\n    return this.seek(accu, strength);\r\n};\r\n\r\nObject.defineProperties(Bird.prototype, {\r\n    x: {\r\n        get() {\r\n            return this.position[0];\r\n        },\r\n        enumerable: true\r\n    },\r\n    y: {\r\n        get() {\r\n            return this.position[1];\r\n        },\r\n        enumerable: true\r\n    },\r\n    z: {\r\n        get() {\r\n            return this.position[2];\r\n        },\r\n        enumerable: true\r\n    },\r\n}); // interface to kdTree\r\n","\r\nimport Bird from './Bird';\r\n\r\nexport default function Sijs(position, course, settings)\r\n{\r\n    Bird.call(this, position, course, settings, settings.sijs);\r\n    this.settings = settings;\r\n}\r\n\r\nSijs.prototype = Object.create(Bird.prototype);\r\nObject.defineProperty(Sijs.prototype, 'constructor', {\r\n    value: Sijs,\r\n    enumerable: false,\r\n    writable: true\r\n});\r\n\r\nSijs.prototype.hilight = function (neighbours, on) {\r\n    this.uniforms.u_color = on ? this.settings.hilightColor : this.settings.sijs.color;\r\n    let col = on ? this.settings.neighbourColor : this.settings.sijs.color;\r\n    neighbours.forEach(v => {\r\n        v[0].uniforms.u_color = col;\r\n    });\r\n    return this;\r\n};\r\n","\r\nimport * as vec3 from 'gl-matrix/esm/vec3';\r\n\r\nimport Bird from './Bird';\r\n\r\nexport default function Predator(settings)\r\n{\r\n    let course = vec3.create();\r\n    vec3.random(course, 1);\r\n    Bird.call(this, vec3.fromValues(2000, -2000, 0), course, settings, settings.predator);\r\n}\r\n\r\nPredator.prototype = Object.create(Bird.prototype);\r\nObject.defineProperty(Predator.prototype, 'constructor', {\r\n    value: Predator,\r\n    enumerable: false,\r\n    writable: true\r\n});\r\n","\r\nfunction shader(id, type, content)\r\n{\r\n    let element = document.createElement('script');\r\n    element.setAttribute('id', id);\r\n    element.setAttribute('type', type);\r\n    element.innerHTML = content;\r\n    document.head.appendChild(element);\r\n}\r\n\r\nexport default function shaders()\r\n{\r\n    shader('vs-u', 'x-shader/x-vertex',\r\n`attribute vec4 a_position;\r\nattribute vec3 a_normal;\r\n\r\nuniform mat4 u_worldView;\r\nuniform mat4 u_projection;\r\nuniform vec4 u_color;\r\n\r\nvarying vec3 v_position;\r\nvarying vec3 v_normal;\r\nvarying vec4 v_color;\r\n\r\nvoid main() {\r\n  gl_Position = u_projection * u_worldView * a_position;\r\n\r\n  v_normal = normalize(a_normal);\r\n  v_color = u_color;\r\n  v_position = (u_worldView * a_position).xyz;\r\n}`);\r\n\r\n    shader('fs-u', 'x-shader/x-fragment',\r\n`#ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n#else\r\n    precision mediump float;\r\n#endif\r\n\r\nuniform vec3 u_reverseLightDirection;\r\nuniform vec3 u_ambientColor;\r\nuniform mat3 u_normal;\r\nuniform vec4 u_fogColor;\r\n// uniform float u_fogNear;\r\n// uniform float u_fogFar;\r\n\r\nvarying vec3 v_position;\r\nvarying vec3 v_normal;\r\nvarying vec4 v_color;\r\n\r\nvoid main() {\r\n   // because v_normal is a varying it's interpolated\r\n   // it will not be a uint vector. Normalizing it\r\n   // will make it a unit vector again\r\n   vec3 normal = normalize(u_normal * v_normal);\r\n\r\n   float light = dot(normal, u_reverseLightDirection);\r\n \r\n   float fogDistance = length(v_position);\r\n   float fogAmount = smoothstep(2000.0, 6000.0, fogDistance);\r\n\r\n   gl_FragColor = mix(v_color, u_fogColor, fogAmount);  \r\n\r\n   // Multiply just the color portion (not the alpha)\r\n   // by the light\r\n   gl_FragColor.rgb *= light;\r\n   gl_FragColor.rgb += u_ambientColor;\r\n}`);\r\n\r\n\r\n\r\n    shader('vs-a', 'x-shader/x-vertex',\r\n`attribute vec4 a_position;\r\nattribute vec4 a_color;\r\n\r\nuniform mat4 u_worldView;\r\nuniform mat4 u_projection;\r\n\r\nvarying vec4 v_color;\r\n\r\nvoid main() {\r\n  gl_PointSize = 4.0;\r\n  gl_Position = u_projection * u_worldView * a_position;\r\n  v_color = a_color;\r\n}`);\r\n\r\n   shader('fs-a', 'x-shader/x-fragment',\r\n`#ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n#else\r\n    precision mediump float;\r\n#endif\r\n\r\nvarying vec4 v_color;\r\n\r\nvoid main() {\r\n   gl_FragColor = v_color;\r\n}`);\r\n}\r\n","\r\nfunction Averager(nValues)\r\n{\r\n    this.values = [];\r\n    this.sum = 0;\r\n    this.nValues = nValues;\r\n}\r\n\r\nAverager.prototype.avg = function(v)\r\n{\r\n    this.values.push(v);\r\n    this.sum += v;\r\n    if (this.values.length > this.nValues) {\r\n        this.sum -= this.values.shift();\r\n    }\r\n    return this.sum / this.values.length;\r\n};\r\n\r\nlet avg = new Averager(10);\r\n\r\nlet prevTime, prevReport;\r\n\r\nexport default function(time, indicators)\r\n{\r\n    if (!prevTime) {\r\n        prevTime = prevReport = time;\r\n        return 0;\r\n    } else {\r\n        let delta = time - prevTime;\r\n        prevTime = time;\r\n        let a = avg.avg(delta);\r\n        if (time > (prevReport + 500))   {\r\n            prevReport = time;\r\n            indicators.fps = (1000 / a).toFixed(1);\r\n        }\r\n        return delta;\r\n    }\r\n}","\r\nimport twgl from 'twgl.js/dist/4.x/twgl-full';\r\n\r\nlet _verts;\r\n\r\nexport default function(gl)\r\n{\r\n    if (! _verts)   {\r\n        _verts = twgl.createBufferInfoFromArrays(gl, {\r\n            position: [\r\n                -1, 0, -1,\r\n                0, -1, 0,\r\n                0, 1, 0,\r\n\r\n                -1, 0, 1,\r\n                0, 1, 0,\r\n                0, -1, 0,\r\n\r\n                0, -1, 0,\r\n                -1, 0, -1,\r\n                1, 0, 0,\r\n\r\n                -1, 0, 1,\r\n                0, -1, 0,\r\n                1, 0, 0,\r\n\r\n                0, 1, 0,\r\n                -1, 0, 1,\r\n                1, 0, 0,\r\n\r\n                -1, 0, -1,\r\n                0, 1, 0,\r\n                1, 0, 0\r\n            ],\r\n            normal: [\r\n                -0.707, 0, 0.707,\r\n                -0.707, 0, 0.707,\r\n                -0.707, 0, 0.707,\r\n\r\n                -0.707, 0, -0.707,\r\n                -0.707, 0, -0.707,\r\n                -0.707, 0, -0.707,\r\n\r\n                0.408, -0.408, -0.816,\r\n                0.408, -0.408, -0.816,\r\n                0.408, -0.408, -0.816,\r\n\r\n                0.408, -0.408, 0.816,\r\n                0.408, -0.408, 0.816,\r\n                0.408, -0.408, 0.816,\r\n\r\n                0.408, 0.408, 0.816,\r\n                0.408, 0.408, 0.816,\r\n                0.408, 0.408, 0.816,\r\n\r\n                0.408, 0.408, -0.816,\r\n                0.408, 0.408, -0.816,\r\n                0.408, 0.408, -0.816\r\n            ]\r\n        });\r\n    }\r\n    return _verts;\r\n}\r\n\r\n","\r\nexport default function Triggers(tempo = 250)\r\n{\r\n    this.remove = false;\r\n    this.add = false;\r\n    this.tempo = tempo;\r\n    this.counter = tempo;\r\n    this.removePending = false;\r\n    this.addPending = false;\r\n    this.minusBtn = document.getElementById('btn-minus');\r\n    this.plusBtn = document.getElementById('btn-plus');\r\n    if (this.minusBtn) {\r\n        this.minusBtn.addEventListener('mousedown', () => { this.removePending = true; });\r\n    }\r\n    if (this.plusBtn) {\r\n        this.plusBtn.addEventListener('mousedown', () => { this.addPending = true; });\r\n    }\r\n    document.addEventListener('mouseup', () => { this.removePending = this.addPending = false; });\r\n}\r\n\r\nTriggers.prototype.update = function(delta)\r\n{\r\n    this.counter -= delta;\r\n    if (this.counter < 0)    {\r\n        this.counter = this.tempo;\r\n        this.remove = this.removePending;\r\n        this.add = this.addPending;\r\n    } else {\r\n        this.remove = this.add = false;\r\n    }\r\n};\r\n","/* main js-file. Build with rollup -c */\r\n/*jshint esversion: 6,  strict: false*/\r\n\r\n/**\r\n * sjaakp/sijssies\r\n * ---------------\r\n *\r\n * Amsterdam variant of the famous 'boids' swarm-intelligence algorithm\r\n * Version 0.9.0\r\n * Copyright (c) 2019\r\n * Sjaak Priester, Amsterdam\r\n * MIT License\r\n * https://github.com/sjaakp/sijssies\r\n * https://sjaakpriester.nl\r\n */\r\n\r\n// @link https://github.com/greggman/twgl.js\r\n// @link http://glmatrix.net/\r\n\r\n/*\r\n    Very confusing:\r\n      mat4.lookAt(...) corresponds to twgl.m4.inverse(twgl.m4.lookAt(...)).\r\n      mat4.targetTo(...) corresponds to twgl.m4.lookAt(...).\r\n*/\r\n\r\nimport twgl from 'twgl.js/dist/4.x/twgl-full';\r\nimport * as mat4 from 'gl-matrix/esm/mat4';\r\nimport * as vec3 from 'gl-matrix/esm/vec3';\r\n\r\nimport KdTree from './KdTree';\r\n\r\nimport Axes from './Axes';\r\nimport Controldesk from './Controldesk';\r\nimport Newsdesk from './Newsdesk';\r\nimport Sijs from './Sijs';\r\nimport Predator from './Predator';\r\n\r\nimport shaders from './shaders';\r\nimport calcDelta from './calcDelta';\r\n\r\nimport Triggers from './Triggers';\r\n\r\nimport sijsBI from './sijsVerts';\r\n\r\nfunction App(gl)\r\n{\r\n    const zero = vec3.create(),\r\n        up = vec3.fromValues(0, 1, 0);\r\n\r\n    const triggers = new Triggers();\r\n\r\n    const axes = new Axes(gl, settings);\r\n\r\n    const flock = [];\r\n    let limbo = [];\r\n    let primeSijs, primeNeighbours;  // we may need them\r\n\r\n    for (let i = 0; i < settings.initialN; i++) {   // fill flock with initialN sijssies...\r\n        let position = vec3.create();\r\n        let course = vec3.create();\r\n\r\n        vec3.random(position, settings.limit / 3);  // ...having random position and course (3 is arbitrarely)\r\n        vec3.random(course, controls.max_speed);\r\n\r\n        let sijs = new Sijs(position, course, settings);\r\n        if (i === 0) primeSijs = sijs;\r\n\r\n        flock.push(sijs);\r\n    }\r\n\r\n    let predator = settings.predator === false ? false : new Predator(settings);\r\n\r\n    // callback for kdTree\r\n    const distance = (a, b) => Math.hypot(a.x - b.x, a.y - b.y, a.z - b.z);       // can't use vec3.distance here, because a or b may be an 'intermedium object', not a sijs\r\n    let reportNeighbours = 0;\r\n\r\n    requestAnimationFrame(render);\r\n    // render loop\r\n    function render(time) {\r\n        let delta = calcDelta(time, indicators);\r\n        indicators.nsijssies = flock.length;\r\n\r\n        triggers.update(delta);\r\n        if (triggers.remove)    {\r\n            let sijs = flock.pop();    // undefined if empty\r\n            if (sijs) limbo.push(sijs);\r\n            if (sijs === primeSijs && flock.length > 0)  { primeSijs = flock[0]; }\r\n        }\r\n        if (triggers.add)   {\r\n            let nest = vec3.fromValues(0, controls.cam_height, 2000);\r\n            vec3.rotateY(nest, nest, zero, Math.PI * (controls.cam_angle + 0.5) / 180);\r\n\r\n            let sijs = new Sijs(nest, zero, settings);\r\n            sijs.seek(zero, 0.1);\r\n            if (flock.length === 0) primeSijs = sijs;\r\n            flock.push(sijs);\r\n        }\r\n\r\n        twgl.resizeCanvasToDisplaySize(gl.canvas);\r\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        let worldView = mat4.create();\r\n\r\n        if (controls.pov && flock.length > 0)   {   // point of view\r\n\r\n                let eye = vec3.clone(primeSijs.position);    // first sijssie is as good as any other\r\n                mat4.lookAt(worldView, eye, primeSijs.course, up );\r\n\r\n        } else {\r\n            let eye = vec3.fromValues(0, controls.cam_height, controls.cam_dist);\r\n            vec3.rotateY(eye, eye, vec3.create(), Math.PI * controls.cam_angle / 180);\r\n\r\n            mat4.lookAt(worldView, eye, vec3.fromValues(0, 60, 0), up);\r\n        }\r\n\r\n        let tree = new KdTree(flock, distance, ['x', 'y', 'z']);    // put flock in kdTree\r\n\r\n        let totalNeighbours = 0;\r\n        let freeze = controls.freeze;\r\n        let gravityPoint = vec3.create();\r\n\r\n        flock.forEach(function (sijs, index) {\r\n            vec3.add(gravityPoint, gravityPoint, sijs.position);\r\n\r\n            let nearest = tree.nearest(sijs, settings.nodeSearch, controls.vision);  // nearest returns Array of [ <sijs>, <distance> ] and includes <sijs> itself\r\n            let neighbours = nearest.filter(v => {  // filter those which sijs can see, and exclude sijs itself\r\n                return sijs.sees(v[0], Math.PI * controls.v_angle / 360);\r\n            });\r\n            totalNeighbours += neighbours.length;\r\n\r\n            if (sijs === primeSijs) primeNeighbours = neighbours;    // remember\r\n\r\n            if (! freeze)   {   // calculate new course\r\n                if (neighbours.length > 0) {\r\n                    sijs.separate(neighbours, controls.separation)  // crux of the swarm intelligence\r\n                        .align(neighbours, controls.align)\r\n                        .cohese(neighbours, controls.cohesion);\r\n                }\r\n\r\n                sijs\r\n                //     .perch(controls.perching)\r\n                    .root(controls.root_strength)   // don't fly of the screen\r\n                    .noise(controls.noise)\r\n                    .bounds(controls.max_accel, controls.max_speed);\r\n\r\n                if (predator && sijs.sees(predator, controls.v_angle))    {\r\n                    sijs.flee(predator.position, 0.005);\r\n                }\r\n            }\r\n        });\r\n\r\n        vec3.scale(gravityPoint, gravityPoint, 1 / flock.length);\r\n\r\n        reportNeighbours += delta;\r\n        if (reportNeighbours > 500) {\r\n            reportNeighbours = 0;\r\n            indicators.neighbours = flock.length > 0 ? (totalNeighbours / flock.length).toFixed(1) : 0;\r\n        }\r\n\r\n        let hell = vec3.fromValues(0, controls.cam_height, 2400);\r\n        vec3.rotateY(hell, hell, zero, Math.PI * (controls.cam_angle - 0.5) / 180);\r\n\r\n        limbo = limbo.filter(sijs => {\r\n            let dist = vec3.length(sijs.position);\r\n            if (dist > 2000) return false;\r\n            sijs.noise(0.05)\r\n                .seek(hell, 0.1)\r\n                .bounds(0.5, 0.5);\r\n            return true;\r\n        });\r\n\r\n        if (! freeze) {\r\n            if (predator)   {\r\n                predator.root(0.01) // seek(gravityPoint, 0.03)\r\n                    .noise(0.08)\r\n                    .bounds(1, 1)\r\n                    .update(delta);\r\n            }\r\n\r\n            flock.forEach(function (sijs) {\r\n                sijs.update(delta);     // calculate new position\r\n            });\r\n\r\n            limbo.forEach(function (sijs) {\r\n                sijs.update(delta);     // calculate new position\r\n            });\r\n        }\r\n\r\n        if (predator) predator.project(worldView);\r\n\r\n        flock.forEach(function (sijs) {\r\n            sijs.project(worldView);\r\n        });\r\n\r\n        limbo.forEach(function (sijs) {\r\n            sijs.project(worldView);\r\n        });\r\n\r\n        let hilight = controls.hilight;\r\n        if (hilight) primeSijs.hilight(primeNeighbours, true);\r\n\r\n        if (predator) twgl.drawObjectList(gl, [predator]);\r\n        if (flock.length > 0) {\r\n            twgl.drawObjectList(gl, flock);\r\n        }\r\n        if (limbo.length > 0) {\r\n            twgl.drawObjectList(gl, limbo);\r\n        }\r\n\r\n        if (hilight) primeSijs.hilight(primeNeighbours, false);\r\n\r\n        if (controls.axes)  {\r\n            axes.draw(gl, worldView);\r\n        }\r\n\r\n        requestAnimationFrame(render);\r\n\r\n        // console.log(\"Error code is \" + gl.getError());\r\n    }\r\n\r\n/*  // doesn't seem to work...\r\n    document.addEventListener('visibilitychange', function () {\r\n        if (document.visibilityState === 'visible') {\r\n            requestAnimationFrame(render);\r\n        }\r\n    });\r\n*/\r\n\r\n}\r\n\r\nconst settings = {};\r\n\r\nconst controls = new Controldesk({\r\n    x: 0,\r\n    y: 0,\r\n    z: 0,\r\n    rot_x: 0,\r\n    rot_y: 0,\r\n    rot_z: 0,\r\n    scale_x: 0,\r\n    scale_y: 0,\r\n    scale_z: 0,\r\n    vision: 200,\r\n    v_angle: 140,\r\n    max_accel: 0.48,\r\n    max_speed: 0.48,\r\n    noise: 0.12,\r\n    root_strength: 0.1,\r\n//        perching: 60,\r\n    align: 0.11,\r\n    cohesion: 0.005,\r\n    separation: 0.3,\r\n\r\n    cam_angle: 30,\r\n    cam_dist: 2000,\r\n    cam_height: 500,\r\n/*\r\n    fog_near: 1000,\r\n    fog_far: 3000,\r\n*/\r\n    axes: false,\r\n//    cube: true,\r\n    hilight: false,\r\n    freeze: false,\r\n    pov: false,\r\n});\r\nconst indicators = new Newsdesk([\r\n    'fps',\r\n    'version',\r\n    'nsijssies',\r\n    'neighbours'\r\n]);\r\n\r\nfunction fly(id, options)\r\n{\r\n    shaders();  // install WebGL shader programs\r\n\r\n    const canvas = document.getElementById(id);\r\n    const gl = twgl.getContext(canvas, { alpha: false });\r\n    if (gl) {\r\n        Object.assign(settings, {\r\n            hilightColor: [0.5, 1, 0, 1],        // chartreuse\r\n            neighbourColor: [0, 0.8, 0.82, 1],        // darkturqoise\r\n            revLightDir: [0.5, 0.7, 1],\r\n            ambientColor: [0.42, 0.42, 0.42],\r\n            zoom: Math.PI / 4,\r\n            backgroundColor: [1, 1, 1, 1],\r\n            axesScale: 150,\r\n            nodeSearch: 24,\r\n            initialN: 100,\r\n            sijs: {\r\n                size: 24,\r\n                face: [ 1, 0, 0 ],\r\n                limit: 1000,\r\n                color: [0.55, 0.27, 0.07, 1]     // saddlebrown \r\n            },\r\n            predator: {\r\n                size: 48,\r\n                face: [ 1, 0, 0 ],\r\n                limit: 2000,\r\n                color: [1, 0, 0, 1]     // red \r\n            }\r\n        }, options);\r\n\r\n        twgl.setDefaults({attribPrefix: \"a_\"});\r\n\r\n        vec3.normalize(settings.revLightDir, settings.revLightDir);\r\n        \r\n        settings.sijs.scale = vec3.fromValues(settings.sijs.size, 0.3 * settings.sijs.size, 0.6 * settings.sijs.size);\r\n        settings.sijs.limit2 = settings.sijs.limit * settings.sijs.limit;\r\n        settings.sijs.verts = sijsBI(gl);\r\n        if (settings.predator)  {\r\n            settings.predator.scale = vec3.fromValues(settings.predator.size, 0.3 * settings.predator.size, 0.6 * settings.predator.size);\r\n            settings.predator.limit2 = settings.predator.limit * settings.predator.limit;\r\n            settings.predator.verts = sijsBI(gl);\r\n        }\r\n\r\n        settings.program = twgl.createProgramInfo(gl, ['vs-u', 'fs-u']);\r\n\r\n        let aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n\r\n        let projectionMatrix = mat4.create();\r\n        mat4.perspective(projectionMatrix, settings.zoom, aspect, settings.sijs.size, null);  // set 'near' to sijs.size for pov\r\n        settings.projection = projectionMatrix;\r\n\r\n        indicators.version = gl.getParameter(gl.VERSION);\r\n\r\n        gl.clearColor(...settings.backgroundColor);\r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.enable(gl.CULL_FACE);\r\n\r\n        return new this.App(gl);\r\n    }\r\n    else { canvas.innerText = 'Browser doesn\\'t support WebGL'; return null; }\r\n}\r\n\r\nexport {App, fly};\r\n","\r\nexport default function(ctrls, prefix = 'control_') {\r\n    Object.assign(this, this, ctrls);\r\n    Object.keys(ctrls).forEach(s => {\r\n        const el = document.getElementById(prefix + s);\r\n        if (el) {\r\n            if (el.type === 'range') {\r\n                el.addEventListener('input', e => {\r\n                    this[s] = Number(e.target.previousElementSibling.lastChild.innerText = e.target.value);\r\n                });\r\n                el.addEventListener('dblclick', e => {\r\n                    e.target.value = 0;\r\n                    e.target.dispatchEvent(new Event('input'));\r\n                });\r\n                el.dispatchEvent(new Event('input'));\r\n            }\r\n            else {     // checkbox\r\n                el.addEventListener('change', e => {\r\n                    this[s] = e.target.checked;\r\n                });\r\n                el.dispatchEvent(new Event('change'));\r\n            }\r\n        }\r\n    });\r\n}\r\n","\r\nexport default function(indicators, prefix = 'msg_') {\r\n    let me = this;\r\n    this.elements = {};\r\n    indicators.forEach(s => {\r\n        const el = document.getElementById(prefix + s);\r\n        if (el) {\r\n            this.elements[s] = el;\r\n            Object.defineProperty(this, s, {\r\n                set(v)  { me.elements[s].innerHTML = v; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n        }\r\n    });\r\n}\r\n"],"names":["factory","self","installedModules","__webpack_require__","m","modules","./src/attributes.js","module","exports","__esModule","createAttribsFromArrays","createBuffersFromArrays","gl","arrays","buffers","Object","keys","forEach","key","createBufferFromArray","indices","numElements","length","elementType","typedArrays","getGLTypeForTypedArray","makeTypedArray","ii","positionKeys","array","getArray","numComponents","getNumComponents","getNumElementsFromNonIndexedArrays","createBufferFromTypedArray","createBufferInfoFromArrays","srcBufferInfo","newAttribs","bufferInfo","assign","attribs","newIndices","ELEMENT_ARRAY_BUFFER","defaults","attribPrefix","attrib","bindBuffer","ARRAY_BUFFER","buffer","numBytes","getBufferParameter","BUFFER_SIZE","bytesPerValue","type","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","getBytesPerValueForGLType","totalElements","size","getNumElementsFromAttributes","setAttribInfoBufferFromArray","attribInfo","offset","undefined","bufferSubData","setBufferFromTypedArray","drawType","setAttributePrefix","prefix","setAttributeDefaults_","newDefaults","helper","copyExistingProperties","getNumComponents_","getArray_","_interopRequireWildcard","obj","newObj","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","default","bufferData","STATIC_DRAW","typedArray","isBuffer","createBuffer","isIndices","name","data","texcoordRE","colorRE","guessNumComponentsFromName","test","arrayName","isArrayBuffer","Array","isArray","Type","Uint16Array","Float32Array","attribName","value","Error","normalization","WebGLBuffer","normalize","numValues","arrayType","BYTES_PER_ELEMENT","getGLTypeForTypedArrayType","typedArrayType","Int8Array","Uint8Array","getNormalizationForTypedArrayType","getNormalizationForTypedArray","stride","divisor","./src/draw.js","drawBufferInfo","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","object","active","programInfo","vertexArrayInfo","bindBuffers","TRIANGLES","useProgram","program","vertexArrayObject","bindVertexArray","programs","setBuffersAndAttributes","setUniforms","uniforms","count","instanceCount","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","./src/framebuffers.js","bindFramebufferInfo","framebufferInfo","target","FRAMEBUFFER","bindFramebuffer","framebuffer","viewport","width","height","drawingBufferWidth","drawingBufferHeight","createFramebufferInfo","attachments","fb","createFramebuffer","colorAttachmentCount","defaultAttachments","attachmentOptions","attachment","format","attachmentPoint","attachmentsByFormat","getAttachmentPointForFormat","COLOR_ATTACHMENT0","renderbufferFormats","isRenderbufferFormat","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","textureOptions","auto","min","minMag","LINEAR","mag","wrapS","wrap","CLAMP_TO_EDGE","wrapT","textures","createTexture","isRenderbuffer","framebufferRenderbuffer","isTexture","framebufferTexture2D","texTarget","TEXTURE_2D","level","push","resizeFramebufferInfo","ndx","resizeTexture","./src/helper.js","src","dst","copyNamedProperties","names","t","repBuffer","constructor","repRenderbuffer","isShader","repShader","createShader","VERTEX_SHADER","repTexture","isSampler","repSampler","createSampler","warn","error","console","bind","./src/m4.js","axisRotate","axis","angleInRadians","MatType","x","y","z","n","Math","sqrt","xx","yy","zz","c","cos","s","sin","oneMinusCosine","r00","r01","r02","r10","r11","r12","r20","r21","r22","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","axisRotation","copy","frustum","left","right","bottom","top","near","far","dx","dy","dz","getAxis","v3","create","off","getTranslation","identity","inverse","lookAt","eye","up","xAxis","tempV3a","yAxis","tempV3b","zAxis","tempV3c","subtract","cross","multiply","a","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","negate","ortho","perspective","fieldOfViewYInRadians","aspect","zNear","zFar","f","tan","PI","rangeInv","rotateX","rotateY","rotateZ","rotationX","rotationY","rotationZ","scale","v","v0","v1","v2","scaling","setAxis","setDefaultType","ctor","oldType","setTranslation","transformDirection","transformNormal","mi","transformPoint","d","translate","m30","m31","m32","m33","translation","transpose","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t1","t2","t3","./src/primitives.js","create3DFVertices","createAugmentedTypedArray","createCubeVertices","createPlaneVertices","createSphereVertices","createTruncatedConeVertices","createXYQuadVertices","createCresentVertices","createCylinderVertices","createTorusVertices","createDiscVertices","deindexVertices","vertices","newVertices","filter","allButIndices","channel","srcBuffer","dstBuffer","jj","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","makeRandomVertexColors","options","position","vcolors","rand","range","random","randInt","color","numVertsPerColor","vertsPerColor","numSets","_ii2","reorientDirections","reorientNormals","reorientPositions","reorientVertices","concatVertices","arrayOfArrays","baseName","_loop","arrayInfo","base","newArrays","info","arraySpec","spec","getLengthOfCombinedArrays","newArraySpec","createArrayOfSameType","newArray","baseIndex","copyElements","copyArraysToNewArray","duplicateVertices","srcArray","createDiscBuffers","createDiscBufferInfo","createTorusBuffers","createTorusBufferInfo","createCylinderBuffers","createCylinderBufferInfo","createCresentBuffers","createCresentBufferInfo","createXYQuadBuffers","createXYQuadBufferInfo","createTruncatedConeBuffers","createTruncatedConeBufferInfo","createSphereBuffers","createSphereBufferInfo","createPlaneBuffers","createPlaneBufferInfo","createCubeBuffers","createCubeBufferInfo","create3DFBuffers","create3DFBufferInfo","attributes","m4","augmentTypedArray","cursor","arguments","reset","opt_index","this","opt_type","applyFuncToV3Array","matrix","fn","len","tmp","indexOf","xOffset","yOffset","texcoord","depth","subdivisionsWidth","subdivisionsDepth","numVertices","positions","texcoords","u","numVertsAcross","_z","_x","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertsAround","_x2","_y","CUBE_FACE_INDICES","k","cornerVertices","faceNormals","uvCoords","faceIndices","uv","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","end","ringRadius","_yy","_ii","expandRLEData","rleData","padding","runLength","element","slice","apply","colors","numVerts","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","angle","px","py","pz","add","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","bodySubdivisions","startAngle","endAngle","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","_slice","_ring","nextRingIndex","nextSliceIndex","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","pow","i","createBufferFunc","createBufferInfoFunc","arraySpecPropertyNames","dstNdx","arraySrc","./src/programs.js","createAttributeSetters","createProgram","createProgramFromScripts","shaderScriptIds","opt_attribs","opt_locations","opt_errorCallback","progOptions","getProgramOptions","shaders","shader","createShaderFromScript","defaultShaderType","errorCallback","createProgramFromSources","createProgramInfo","shaderSources","good","map","source","script","getElementById","text","createProgramInfoFromProgram","createUniformSetters","createUniformBlockSpecFromProgram","createUniformBlockInfoFromProgram","createUniformBlockInfo","blockName","uniformBlockSpec","createTransformFeedback","tf","bindTransformFeedback","TRANSFORM_FEEDBACK","bindTransformFeedbackInfo","createTransformFeedbackInfo","setAttributes","attribSetters","setters","values","actualSetters","uniformSetters","numArgs","andx","vals","setter","setUniformBlock","uniformBlockInfo","bindUniformBlock","UNIFORM_BUFFER","DYNAMIC_DRAW","setBlockUniforms","utils","document","TEXTURE_CUBE_MAP","TEXTURE_2D_ARRAY","typeMap","getBindPointForSamplerType","bindPoint","intSetter","location","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","isWebGL2","textureOrPair","texture","sampler","activeTexture","TEXTURE0","bindTexture","bindSampler","samplerArraySetter","units","Int32Array","index","floatAttribSetter","disableVertexAttribArray","vertexAttrib4fv","enableVertexAttribArray","vertexAttribPointer","vertexAttribDivisor","intAttribSetter","vertexAttrib4iv","vertexAttribIPointer","uintAttribSetter","vertexAttrib4uiv","matAttribSetter","typeInfo","defaultSize","rowOffset","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","attrTypeMap","spaceRE","loadShader","shaderSource","shaderType","errFn","lineOffset","replace","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","split","line","join","addLineNumbers","deleteShader","transformFeedbackVaryings","opt","attribLocations","getShaderTypeFromScriptType","scriptType","FRAGMENT_SHADER","deleteShaders","realShaders","newShaders","elem","attachShader","bindAttribLocation","varyings","transformFeedbackMode","SEPARATE_ATTRIBS","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","scriptId","opt_shaderType","shaderScript","isBuiltIn","startsWith","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","toString","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","numVaryings","TRANSFORM_FEEDBACK_VARYINGS","varying","getTransformFeedbackVarying","transformFeedbackInfo","buf","bindBufferRange","TRANSFORM_FEEDBACK_BUFFER","bindBufferBase","uniformData","uniformIndices","pair","pname","getActiveUniforms","blockSpecs","numUniformBlocks","ACTIVE_UNIFORM_BLOCKS","getActiveUniformBlockName","blockSpec","usedByVertexShader","getActiveUniformBlockParameter","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","usedByFragmentShader","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","used","usedByVertexSahder","arraySuffixRE","ArrayBuffer","uniformBufferIndex","uniformBlockBinding","uniformNdx","asFloat","bufferBindIndex","byteLength","numAttribs","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","./src/textures.js","setTextureDefaults_","textureColor","setDefaultTextureColor","createSamplers","samplerOptions","samplers","setSamplerParameters","setEmptyTexture","setTextureFromArray","loadTextureFromUrl","setTextureFromElement","setTextureFilteringForSize","setTextureParameters","createTextures","callback","noop","numDownloading","errors","images","callCallbackIfReady","setTimeout","onLoadFn","isAsyncSrc","err","tex","img","internalFormat","RGBA","formatType","getFormatAndTypeForInternalFormat","getTextureTypeForArrayType","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","canGenerateMipmap","canFilter","getNumComponentsForFormat","formatInfo","numColorComponents","getBytesPerElementForInternalFormat","crossOrigin","ctx","createElement","getContext","RGB","HALF_FLOAT","HALF_FLOAT_OES","RG","RG_INTEGER","RED","RED_INTEGER","RGB_INTEGER","RGBA_INTEGER","textureInternalFormatInfo","bytesPerElement","bytesPerElementMap","textureFormat","isPowerOf2","colorRenderable","textureFilterable","defaultType","guessDimensions","lastPackState","savePackState","colorspaceConversion","getParameter","UNPACK_COLORSPACE_CONVERSION_WEBGL","pixelStorei","premultiplyAlpha","UNPACK_PREMULTIPLY_ALPHA_WEBGL","flipY","UNPACK_FLIP_Y_WEBGL","restorePackState","saveSkipState","unpackAlignment","UNPACK_ALIGNMENT","unpackRowLength","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","restoreSkipState","setTextureSamplerParameters","parameteriFn","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_3D","TEXTURE_WRAP_R","wrapR","minLod","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","baseLevel","TEXTURE_BASE_LEVEL","maxLevel","TEXTURE_MAX_LEVEL","texParameteri","samplerParameteri","generateMipmap","filtering","NEAREST","shouldAutomaticallySetTextureFilteringForSize","getCubeFaceOrder","cubeFaceOrder","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","getCubeFacesWithNdx","facesWithNdx","face","sort","slices","imgWidth","imgHeight","nodeName","canvas","drawImage","createImageBitmap","colorSpaceConversion","then","imageBitmap","smallest","largest","max","xMult","yMult","texImage3D","srcX","srcY","texSubImage3D","setToAnonymousIfUndefinedAndURLIsNotSameOrigin","url","href","hostname","port","protocol","localOrigin","URL","origin","urlIsSameOrigin","isTexImageSource","ImageBitmap","ImageData","HTMLElement","loadAndUseImage","Image","clearEventHandlers","removeEventListener","onError","onLoad","msg","addEventListener","bm","cb","mode","fetch","response","ok","blob","bitmap","catch","e","loadImage","setTextureTo1PixelColor","make1Pixel","loadCubemapFromUrls","urls","imgs","numToLoad","faces","faceTarget","otherTarget","uploadImg","loadSlicesFromUrls","firstImage","Uint8ClampedArray","getTypedArrayTypeForGLType","dimensions","glEnumToString","cbrt","faceSize","subarray","./src/twgl-full.js","_exportNames","primitives","_twgl","./src/twgl.js","addExtensionsToContext","getWebGLContext","resizeCanvasToDisplaySize","setDefaults","context","createContext","create3DContext","multiplier","clientWidth","clientHeight","_draw","_framebuffers","_programs","_typedarrays","_vertexArrays","prefixRE","addExtensionToContext","extensionName","ext","getExtension","enums","fnSuffix","exec","enumSuffix","isFunc","suffix","endsWith","substring","origFn","supportedExtensions","./src/typedarrays.js","Int16Array","CTOR","glTypeToTypedArray","tt","SharedArrayBuffer","./src/utils.js","isWebGL1","texStorage2D","haveEnumsForType","existing","concat","addEnums","./src/v3.js","VecType","distance","distanceSq","divide","divScalar","dot","lerp","lerpV","lengthSq","mulScalar","lenSq","./src/vertex-arrays.js","createVertexArrayInfo","programInfos","vao","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo","getter","o","enumerable","r","Symbol","toStringTag","ns","property","p","moduleId","l","EPSILON","ARRAY_TYPE","RANDOM","out","glMatrix.ARRAY_TYPE","center","x0","x1","x2","y0","y1","y2","z0","z1","z2","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","glMatrix.EPSILON","fromValues","ax","ay","az","bx","by","bz","glMatrix.RANDOM","zScale","vec","Node","dimension","parent","points","metric","root","buildTree","median","node","dim","floor","restoreParent","toJSON","dest","insert","point","newNode","insertPosition","innerSearch","remove","nodeSearch","removeNode","nextNode","nextObj","pDimension","findMin","own","nearest","maxNodes","maxDistance","result","bestNodes","BinaryHeap","nearestSearch","bestChild","linearDistance","otherChild","ownDistance","linearPoint","saveNode","pop","peek","content","balanceFactor","log","scoreFunction","bubbleUp","sinkDown","parentN","elemScore","child2N","child1N","swap","child1","child1Score","child2","degree","glMatrix","b04","b05","b06","b07","b08","b09","det","rad","fromRotationTranslation","bw","aw","magnitude","mat","trace","S","q","w","xy","xz","yz","wx","wy","wz","sx","sy","sz","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","yx","zx","zy","rl","tb","nf","fovy","Infinity","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","lr","bt","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b14","b15","require$$0","mul","sub","Axes","settings","let","axesScale","model","mat4","fromScaling","projection","draw","viewMatrix","worldView","const","program_a","twgl","u_worldView","u_projection","axesVerts","LINES","axesDots","POINTS","slerp","omega","cosom","sinom","scale0","scale1","acos","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","vec3.create","vec3.fromValues","vec3.dot","vec3.cross","vec3.len","vec3.normalize","setAxisAngle","mat3.create","Bird","course","birdSettings","verts","acceleration","u_normal","mat4.create","u_color","u_reverseLightDirection","revLightDir","u_ambientColor","ambientColor","u_fogColor","backgroundColor","perching","Sijs","sijs","Predator","vec3.random","predator","id","setAttribute","innerHTML","head","appendChild","Averager","nValues","sum","updateModel","normCourse","quat.create","quat.rotationTo","mat4.fromRotationTranslationScale","mat3.normalFromMat4","update","delta","move","vec3.scale","vec3.add","project","viewProjection","mat4.multiply","sees","other","visionAngle","vec3.subtract","tempA","tempB","cosine","vec3.angle","seek","to","strength","diff","flee","from","rootStrength","vec3.squaredLength","limit2","limit","noise","rnd","boundVec","curLevel","vec3.length","bounds","maxAccel","maxSpeed","separate","neighbours","accu","reduce","acc","dist","align","cohese","defineProperties","writable","hilight","on","hilightColor","col","neighbourColor","avg","shift","prevTime","prevReport","_verts","time","indicators","fps","toFixed","Triggers","tempo","counter","removePending","addPending","minusBtn","plusBtn","controls","ctrls","el","Number","previousElementSibling","lastChild","innerText","dispatchEvent","Event","checked","rot_x","rot_y","rot_z","scale_x","scale_y","scale_z","vision","v_angle","max_accel","max_speed","root_strength","cohesion","separation","cam_angle","cam_dist","cam_height","axes","freeze","pov","me","elements","configurable","primeSijs","primeNeighbours","zero","triggers","flock","limbo","initialN","hypot","reportNeighbours","requestAnimationFrame","render","calcDelta","nsijssies","nest","vec3.rotateY","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","mat4.lookAt","tree","KdTree","totalNeighbours","gravityPoint","hell","alpha","zoom","sijsBI","projectionMatrix","mat4.perspective","version","VERSION","clearColor","enable","DEPTH_TEST","CULL_FACE","App"],"mappings":"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"}